components:
  schemas:
    ASTNode:
      properties:
        columnNumber:
          format: int32
          type: integer
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        text:
          type: string
      type: object
    Account:
      properties:
        accountId:
          type: string
        name:
          type: string
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        requiredGroupMembership:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    AccountDefinition:
      description: Account definition body including a discriminator field named "type" with the account type.
      properties:
        name:
          type: string
        type:
          type: string
      type: object
    AccountDetails:
      properties:
        accountId:
          type: string
        accountType:
          type: string
        challengeDestructiveActions:
          type: boolean
        cloudProvider:
          type: string
        environment:
          type: string
        name:
          type: string
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        primaryAccount:
          type: boolean
        requiredGroupMembership:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    AnnotatedNode:
      properties:
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        synthetic:
          type: boolean
        text:
          type: string
      type: object
    AnnotationNode:
      properties:
        allowedTargets:
          format: int32
          type: integer
          writeOnly: true
        builtIn:
          type: boolean
        classNode:
          $ref: '#/components/schemas/ClassNode'
        classRetention:
          type: boolean
          writeOnly: true
        columnNumber:
          format: int32
          type: integer
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        members:
          additionalProperties:
            $ref: '#/components/schemas/Expression'
          type: object
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        runtimeRetention:
          type: boolean
          writeOnly: true
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        sourceRetention:
          type: boolean
          writeOnly: true
        text:
          type: string
      type: object
    BlockStatement:
      properties:
        columnNumber:
          format: int32
          type: integer
        empty:
          type: boolean
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        statementLabel:
          deprecated: true
          type: string
        statementLabels:
          items:
            type: string
          type: array
        statements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        text:
          type: string
        variableScope:
          $ref: '#/components/schemas/VariableScope'
      type: object
    BytecodeProcessor:
      type: object
    CSTNode:
      properties:
        anExpression:
          type: boolean
        description:
          type: string
        empty:
          type: boolean
        meaning:
          format: int32
          type: integer
        root:
          $ref: '#/components/schemas/Token'
        rootText:
          type: string
        startColumn:
          format: int32
          type: integer
        startLine:
          format: int32
          type: integer
        type:
          format: int32
          type: integer
      type: object
    CachedClass:
      properties:
        cachedClass:
          $ref: '#/components/schemas/CachedClass'
        cachedSuperClass:
          $ref: '#/components/schemas/CachedClass'
        callSiteLoader:
          $ref: '#/components/schemas/CallSiteClassLoader'
        classInfo:
          $ref: '#/components/schemas/ClassInfo'
        constructors:
          items:
            $ref: '#/components/schemas/CachedConstructor'
          type: array
        declaredInterfaces:
          items:
            $ref: '#/components/schemas/CachedClass'
          type: array
          uniqueItems: true
        fields:
          items:
            $ref: '#/components/schemas/CachedField'
          type: array
        hierarchy:
          items:
            $ref: '#/components/schemas/ClassInfo'
          type: array
        interface:
          type: boolean
        interfaces:
          items:
            $ref: '#/components/schemas/CachedClass'
          type: array
          uniqueItems: true
        isArray:
          type: boolean
        isInterface:
          type: boolean
        isNumber:
          type: boolean
        isPrimitive:
          type: boolean
        methods:
          items:
            $ref: '#/components/schemas/CachedMethod'
          type: array
        modifiers:
          format: int32
          type: integer
        mopMethods:
          items:
            $ref: '#/components/schemas/CachedMethod'
          type: array
        name:
          type: string
        newMetaMethods:
          items:
            $ref: '#/components/schemas/MetaMethod'
          type: array
        primitive:
          type: boolean
        superClassDistance:
          format: int32
          type: integer
        typeDescription:
          type: string
        void:
          type: boolean
      type: object
    CachedConstructor:
      properties:
        cachedClass:
          $ref: '#/components/schemas/CachedClass'
        cachedConstructor:
          properties:
            accessible:
              deprecated: true
              type: boolean
            annotatedExceptionTypes:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  type:
                    properties:
                      typeName:
                        type: string
                    type: object
                type: object
              type: array
            annotatedParameterTypes:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  type:
                    properties:
                      typeName:
                        type: string
                    type: object
                type: object
              type: array
            annotatedReceiverType:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                type:
                  properties:
                    typeName:
                      type: string
                  type: object
              type: object
            annotatedReturnType:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                type:
                  properties:
                    typeName:
                      type: string
                  type: object
              type: object
            annotations:
              items:
                type: object
              type: array
            declaredAnnotations:
              items:
                type: object
              type: array
            genericExceptionTypes:
              items:
                properties:
                  typeName:
                    type: string
                type: object
              type: array
            genericParameterTypes:
              items:
                properties:
                  typeName:
                    type: string
                type: object
              type: array
            modifiers:
              format: int32
              type: integer
            name:
              type: string
            parameterAnnotations:
              items:
                items:
                  type: object
                type: array
              type: array
            parameterCount:
              format: int32
              type: integer
            parameters:
              items:
                properties:
                  annotatedType:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      type:
                        properties:
                          typeName:
                            type: string
                        type: object
                    type: object
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  declaringExecutable:
                    properties:
                      accessible:
                        deprecated: true
                        type: boolean
                      annotatedExceptionTypes:
                        items:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        type: array
                      annotatedParameterTypes:
                        items:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        type: array
                      annotatedReceiverType:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          type:
                            properties:
                              typeName:
                                type: string
                            type: object
                        type: object
                      annotatedReturnType:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          type:
                            properties:
                              typeName:
                                type: string
                            type: object
                        type: object
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      genericExceptionTypes:
                        items:
                          properties:
                            typeName:
                              type: string
                          type: object
                        type: array
                      genericParameterTypes:
                        items:
                          properties:
                            typeName:
                              type: string
                          type: object
                        type: array
                      modifiers:
                        format: int32
                        type: integer
                      name:
                        type: string
                      parameterAnnotations:
                        items:
                          items:
                            type: object
                          type: array
                        type: array
                      parameterCount:
                        format: int32
                        type: integer
                      synthetic:
                        type: boolean
                      typeParameters:
                        items:
                          properties:
                            annotatedBounds:
                              items:
                                properties:
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  type:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            annotations:
                              items:
                                type: object
                              type: array
                            bounds:
                              items:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            genericDeclaration:
                              type: object
                            name:
                              type: string
                            typeName:
                              type: string
                          type: object
                        type: array
                      varArgs:
                        type: boolean
                    type: object
                  implicit:
                    type: boolean
                  modifiers:
                    format: int32
                    type: integer
                  name:
                    type: string
                  namePresent:
                    type: boolean
                  parameterizedType:
                    properties:
                      typeName:
                        type: string
                    type: object
                  synthetic:
                    type: boolean
                  varArgs:
                    type: boolean
                type: object
              type: array
            synthetic:
              type: boolean
            typeParameters:
              items:
                properties:
                  annotatedBounds:
                    items:
                      properties:
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        type:
                          properties:
                            typeName:
                              type: string
                          type: object
                      type: object
                    type: array
                  annotations:
                    items:
                      type: object
                    type: array
                  bounds:
                    items:
                      properties:
                        typeName:
                          type: string
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  genericDeclaration:
                    properties:
                      accessible:
                        deprecated: true
                        type: boolean
                      annotatedExceptionTypes:
                        items:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        type: array
                      annotatedParameterTypes:
                        items:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        type: array
                      annotatedReceiverType:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          type:
                            properties:
                              typeName:
                                type: string
                            type: object
                        type: object
                      annotatedReturnType:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          type:
                            properties:
                              typeName:
                                type: string
                            type: object
                        type: object
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      genericExceptionTypes:
                        items:
                          properties:
                            typeName:
                              type: string
                          type: object
                        type: array
                      genericParameterTypes:
                        items:
                          properties:
                            typeName:
                              type: string
                          type: object
                        type: array
                      modifiers:
                        format: int32
                        type: integer
                      name:
                        type: string
                      parameterAnnotations:
                        items:
                          items:
                            type: object
                          type: array
                        type: array
                      parameterCount:
                        format: int32
                        type: integer
                      parameters:
                        items:
                          properties:
                            annotatedType:
                              properties:
                                annotations:
                                  items:
                                    type: object
                                  type: array
                                declaredAnnotations:
                                  items:
                                    type: object
                                  type: array
                                type:
                                  properties:
                                    typeName:
                                      type: string
                                  type: object
                              type: object
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            declaringExecutable:
                              properties:
                                accessible:
                                  deprecated: true
                                  type: boolean
                                annotatedExceptionTypes:
                                  items:
                                    properties:
                                      annotations:
                                        items:
                                          type: object
                                        type: array
                                      declaredAnnotations:
                                        items:
                                          type: object
                                        type: array
                                      type:
                                        properties:
                                          typeName:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                annotatedParameterTypes:
                                  items:
                                    properties:
                                      annotations:
                                        items:
                                          type: object
                                        type: array
                                      declaredAnnotations:
                                        items:
                                          type: object
                                        type: array
                                      type:
                                        properties:
                                          typeName:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                annotatedReceiverType:
                                  properties:
                                    annotations:
                                      items:
                                        type: object
                                      type: array
                                    declaredAnnotations:
                                      items:
                                        type: object
                                      type: array
                                    type:
                                      properties:
                                        typeName:
                                          type: string
                                      type: object
                                  type: object
                                annotatedReturnType:
                                  properties:
                                    annotations:
                                      items:
                                        type: object
                                      type: array
                                    declaredAnnotations:
                                      items:
                                        type: object
                                      type: array
                                    type:
                                      properties:
                                        typeName:
                                          type: string
                                      type: object
                                  type: object
                                annotations:
                                  items:
                                    type: object
                                  type: array
                                declaredAnnotations:
                                  items:
                                    type: object
                                  type: array
                                genericExceptionTypes:
                                  items:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                  type: array
                                genericParameterTypes:
                                  items:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                  type: array
                                modifiers:
                                  format: int32
                                  type: integer
                                name:
                                  type: string
                                parameterAnnotations:
                                  items:
                                    items:
                                      type: object
                                    type: array
                                  type: array
                                parameterCount:
                                  format: int32
                                  type: integer
                                synthetic:
                                  type: boolean
                                typeParameters:
                                  items:
                                    properties:
                                      annotatedBounds:
                                        items:
                                          properties:
                                            annotations:
                                              items:
                                                type: object
                                              type: array
                                            declaredAnnotations:
                                              items:
                                                type: object
                                              type: array
                                            type:
                                              properties:
                                                typeName:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      annotations:
                                        items:
                                          type: object
                                        type: array
                                      bounds:
                                        items:
                                          properties:
                                            typeName:
                                              type: string
                                          type: object
                                        type: array
                                      declaredAnnotations:
                                        items:
                                          type: object
                                        type: array
                                      genericDeclaration:
                                        type: object
                                      name:
                                        type: string
                                      typeName:
                                        type: string
                                    type: object
                                  type: array
                                varArgs:
                                  type: boolean
                              type: object
                            implicit:
                              type: boolean
                            modifiers:
                              format: int32
                              type: integer
                            name:
                              type: string
                            namePresent:
                              type: boolean
                            parameterizedType:
                              properties:
                                typeName:
                                  type: string
                              type: object
                            synthetic:
                              type: boolean
                            varArgs:
                              type: boolean
                          type: object
                        type: array
                      synthetic:
                        type: boolean
                      varArgs:
                        type: boolean
                    type: object
                  name:
                    type: string
                  typeName:
                    type: string
                type: object
              type: array
            varArgs:
              type: boolean
          type: object
        modifiers:
          format: int32
          type: integer
        vargsMethod:
          type: boolean
      type: object
    CachedField:
      properties:
        cachedField:
          properties:
            accessible:
              deprecated: true
              type: boolean
            annotatedType:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                type:
                  properties:
                    typeName:
                      type: string
                  type: object
              type: object
            annotations:
              items:
                type: object
              type: array
            declaredAnnotations:
              items:
                type: object
              type: array
            enumConstant:
              type: boolean
            genericType:
              properties:
                typeName:
                  type: string
              type: object
            modifiers:
              format: int32
              type: integer
            name:
              type: string
            synthetic:
              type: boolean
          type: object
        final:
          type: boolean
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        static:
          type: boolean
      type: object
    CachedMethod:
      properties:
        abstract:
          type: boolean
        cacheable:
          type: boolean
        cachedClass:
          $ref: '#/components/schemas/CachedClass'
        cachedMethod:
          properties:
            accessible:
              deprecated: true
              type: boolean
            annotatedExceptionTypes:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  type:
                    properties:
                      typeName:
                        type: string
                    type: object
                type: object
              type: array
            annotatedParameterTypes:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  type:
                    properties:
                      typeName:
                        type: string
                    type: object
                type: object
              type: array
            annotatedReceiverType:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                type:
                  properties:
                    typeName:
                      type: string
                  type: object
              type: object
            annotatedReturnType:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                type:
                  properties:
                    typeName:
                      type: string
                  type: object
              type: object
            annotations:
              items:
                type: object
              type: array
            bridge:
              type: boolean
            declaredAnnotations:
              items:
                type: object
              type: array
            default:
              type: boolean
            defaultValue:
              type: object
            genericExceptionTypes:
              items:
                properties:
                  typeName:
                    type: string
                type: object
              type: array
            genericParameterTypes:
              items:
                properties:
                  typeName:
                    type: string
                type: object
              type: array
            genericReturnType:
              properties:
                typeName:
                  type: string
              type: object
            modifiers:
              format: int32
              type: integer
            name:
              type: string
            parameterAnnotations:
              items:
                items:
                  type: object
                type: array
              type: array
            parameterCount:
              format: int32
              type: integer
            parameters:
              items:
                properties:
                  annotatedType:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      type:
                        properties:
                          typeName:
                            type: string
                        type: object
                    type: object
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  declaringExecutable:
                    properties:
                      accessible:
                        deprecated: true
                        type: boolean
                      annotatedExceptionTypes:
                        items:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        type: array
                      annotatedParameterTypes:
                        items:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        type: array
                      annotatedReceiverType:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          type:
                            properties:
                              typeName:
                                type: string
                            type: object
                        type: object
                      annotatedReturnType:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          type:
                            properties:
                              typeName:
                                type: string
                            type: object
                        type: object
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      genericExceptionTypes:
                        items:
                          properties:
                            typeName:
                              type: string
                          type: object
                        type: array
                      genericParameterTypes:
                        items:
                          properties:
                            typeName:
                              type: string
                          type: object
                        type: array
                      modifiers:
                        format: int32
                        type: integer
                      name:
                        type: string
                      parameterAnnotations:
                        items:
                          items:
                            type: object
                          type: array
                        type: array
                      parameterCount:
                        format: int32
                        type: integer
                      synthetic:
                        type: boolean
                      typeParameters:
                        items:
                          properties:
                            annotatedBounds:
                              items:
                                properties:
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  type:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            annotations:
                              items:
                                type: object
                              type: array
                            bounds:
                              items:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            genericDeclaration:
                              type: object
                            name:
                              type: string
                            typeName:
                              type: string
                          type: object
                        type: array
                      varArgs:
                        type: boolean
                    type: object
                  implicit:
                    type: boolean
                  modifiers:
                    format: int32
                    type: integer
                  name:
                    type: string
                  namePresent:
                    type: boolean
                  parameterizedType:
                    properties:
                      typeName:
                        type: string
                    type: object
                  synthetic:
                    type: boolean
                  varArgs:
                    type: boolean
                type: object
              type: array
            synthetic:
              type: boolean
            typeParameters:
              items:
                properties:
                  annotatedBounds:
                    items:
                      properties:
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        type:
                          properties:
                            typeName:
                              type: string
                          type: object
                      type: object
                    type: array
                  annotations:
                    items:
                      type: object
                    type: array
                  bounds:
                    items:
                      properties:
                        typeName:
                          type: string
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  name:
                    type: string
                  typeName:
                    type: string
                type: object
              type: array
            varArgs:
              type: boolean
          type: object
        declaringClass:
          $ref: '#/components/schemas/CachedClass'
        default:
          type: boolean
        descriptor:
          type: string
        modifiers:
          format: int32
          type: integer
        mopName:
          type: string
        name:
          type: string
        paramTypes:
          $ref: '#/components/schemas/ParameterTypes'
        paramsCount:
          format: int32
          type: integer
        private:
          type: boolean
        protected:
          type: boolean
        public:
          type: boolean
        signature:
          type: string
        static:
          type: boolean
        synthetic:
          type: boolean
        transformedMethod:
          $ref: '#/components/schemas/CachedMethod'
        vargsMethod:
          type: boolean
      type: object
    CallSiteClassLoader:
      properties:
        defaultAssertionStatus:
          type: boolean
          writeOnly: true
        definedPackages:
          items:
            properties:
              annotations:
                items:
                  type: object
                type: array
              declaredAnnotations:
                items:
                  type: object
                type: array
              implementationTitle:
                type: string
              implementationVendor:
                type: string
              implementationVersion:
                type: string
              name:
                type: string
              sealed:
                type: boolean
              specificationTitle:
                type: string
              specificationVendor:
                type: string
              specificationVersion:
                type: string
            type: object
          type: array
        klazz:
          properties:
            enqueued:
              deprecated: true
              type: boolean
          type: object
        name:
          type: string
        parent:
          properties:
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
            definedPackages:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  implementationTitle:
                    type: string
                  implementationVendor:
                    type: string
                  implementationVersion:
                    type: string
                  name:
                    type: string
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVendor:
                    type: string
                  specificationVersion:
                    type: string
                type: object
              type: array
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            unnamedModule:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                classLoader:
                  properties:
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                    definedPackages:
                      items:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          implementationTitle:
                            type: string
                          implementationVendor:
                            type: string
                          implementationVersion:
                            type: string
                          name:
                            type: string
                          sealed:
                            type: boolean
                          specificationTitle:
                            type: string
                          specificationVendor:
                            type: string
                          specificationVersion:
                            type: string
                        type: object
                      type: array
                    name:
                      type: string
                    registeredAsParallelCapable:
                      type: boolean
                  type: object
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                descriptor:
                  properties:
                    automatic:
                      type: boolean
                    open:
                      type: boolean
                  type: object
                layer:
                  type: object
                name:
                  type: string
                named:
                  type: boolean
                packages:
                  items:
                    type: string
                  type: array
                  uniqueItems: true
              type: object
          type: object
        registeredAsParallelCapable:
          type: boolean
        unnamedModule:
          properties:
            annotations:
              items:
                type: object
              type: array
            classLoader:
              properties:
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                definedPackages:
                  items:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      implementationTitle:
                        type: string
                      implementationVendor:
                        type: string
                      implementationVersion:
                        type: string
                      name:
                        type: string
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVendor:
                        type: string
                      specificationVersion:
                        type: string
                    type: object
                  type: array
                name:
                  type: string
                registeredAsParallelCapable:
                  type: boolean
              type: object
            declaredAnnotations:
              items:
                type: object
              type: array
            descriptor:
              properties:
                automatic:
                  type: boolean
                open:
                  type: boolean
              type: object
            layer:
              type: object
            name:
              type: string
            named:
              type: boolean
            packages:
              items:
                type: string
              type: array
              uniqueItems: true
          type: object
      type: object
    ClassInfo:
      properties:
        artifactClassLoader:
          $ref: '#/components/schemas/ClassLoaderForClassArtifacts'
        cachedClass:
          $ref: '#/components/schemas/CachedClass'
        hash:
          format: int32
          type: integer
        metaClassForClass:
          $ref: '#/components/schemas/MetaClass'
        modifiedExpando:
          $ref: '#/components/schemas/ExpandoMetaClass'
        strongMetaClass:
          $ref: '#/components/schemas/MetaClass'
        version:
          format: int32
          type: integer
        weakMetaClass:
          $ref: '#/components/schemas/MetaClass'
      type: object
    ClassLoaderForClassArtifacts:
      properties:
        defaultAssertionStatus:
          type: boolean
          writeOnly: true
        definedPackages:
          items:
            properties:
              annotations:
                items:
                  type: object
                type: array
              declaredAnnotations:
                items:
                  type: object
                type: array
              implementationTitle:
                type: string
              implementationVendor:
                type: string
              implementationVersion:
                type: string
              name:
                type: string
              sealed:
                type: boolean
              specificationTitle:
                type: string
              specificationVendor:
                type: string
              specificationVersion:
                type: string
            type: object
          type: array
        klazz:
          properties:
            enqueued:
              deprecated: true
              type: boolean
          type: object
        name:
          type: string
        parent:
          properties:
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
            definedPackages:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  implementationTitle:
                    type: string
                  implementationVendor:
                    type: string
                  implementationVersion:
                    type: string
                  name:
                    type: string
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVendor:
                    type: string
                  specificationVersion:
                    type: string
                type: object
              type: array
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            unnamedModule:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                classLoader:
                  properties:
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                    definedPackages:
                      items:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          implementationTitle:
                            type: string
                          implementationVendor:
                            type: string
                          implementationVersion:
                            type: string
                          name:
                            type: string
                          sealed:
                            type: boolean
                          specificationTitle:
                            type: string
                          specificationVendor:
                            type: string
                          specificationVersion:
                            type: string
                        type: object
                      type: array
                    name:
                      type: string
                    registeredAsParallelCapable:
                      type: boolean
                  type: object
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                descriptor:
                  properties:
                    automatic:
                      type: boolean
                    open:
                      type: boolean
                  type: object
                layer:
                  type: object
                name:
                  type: string
                named:
                  type: boolean
                packages:
                  items:
                    type: string
                  type: array
                  uniqueItems: true
              type: object
          type: object
        registeredAsParallelCapable:
          type: boolean
        unnamedModule:
          properties:
            annotations:
              items:
                type: object
              type: array
            classLoader:
              properties:
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                definedPackages:
                  items:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      implementationTitle:
                        type: string
                      implementationVendor:
                        type: string
                      implementationVersion:
                        type: string
                      name:
                        type: string
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVendor:
                        type: string
                      specificationVersion:
                        type: string
                    type: object
                  type: array
                name:
                  type: string
                registeredAsParallelCapable:
                  type: boolean
              type: object
            declaredAnnotations:
              items:
                type: object
              type: array
            descriptor:
              properties:
                automatic:
                  type: boolean
                open:
                  type: boolean
              type: object
            layer:
              type: object
            name:
              type: string
            named:
              type: boolean
            packages:
              items:
                type: string
              type: array
              uniqueItems: true
          type: object
      type: object
    ClassNode:
      properties:
        abstract:
          type: boolean
        abstractMethods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        allDeclaredMethods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        allInterfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
          uniqueItems: true
        annotated:
          type: boolean
        annotationDefinition:
          type: boolean
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        array:
          type: boolean
        columnNumber:
          format: int32
          type: integer
        compileUnit:
          $ref: '#/components/schemas/CompileUnit'
        componentType:
          $ref: '#/components/schemas/ClassNode'
        declaredConstructors:
          items:
            $ref: '#/components/schemas/ConstructorNode'
          type: array
        declaredMethodsMap:
          additionalProperties:
            $ref: '#/components/schemas/MethodNode'
          type: object
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        derivedFromGroovyObject:
          type: boolean
        enclosingMethod:
          $ref: '#/components/schemas/MethodNode'
        enum:
          type: boolean
        fieldIndex:
          additionalProperties:
            $ref: '#/components/schemas/FieldNode'
          type: object
        fields:
          items:
            $ref: '#/components/schemas/FieldNode'
          type: array
        genericsPlaceHolder:
          type: boolean
        genericsTypes:
          items:
            $ref: '#/components/schemas/GenericsType'
          type: array
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        innerClasses:
          type: object
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        interface:
          type: boolean
        interfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        methods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        mixins:
          items:
            $ref: '#/components/schemas/MixinNode'
          type: array
        modifiers:
          format: int32
          type: integer
        module:
          $ref: '#/components/schemas/ModuleNode'
        name:
          type: string
        nameWithoutPackage:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        objectInitializerStatements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        outerClass:
          $ref: '#/components/schemas/ClassNode'
        outerClasses:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        package:
          $ref: '#/components/schemas/PackageNode'
        packageName:
          type: string
        permittedSubclasses:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        plainNodeReference:
          $ref: '#/components/schemas/ClassNode'
        primaryClassNode:
          type: boolean
        properties:
          items:
            $ref: '#/components/schemas/PropertyNode'
          type: array
        record:
          type: boolean
        recordComponentNodes:
          deprecated: true
          items:
            $ref: '#/components/schemas/RecordComponentNode'
          type: array
        recordComponents:
          items:
            $ref: '#/components/schemas/RecordComponentNode'
          type: array
        redirect:
          $ref: '#/components/schemas/ClassNode'
        redirectNode:
          type: boolean
        resolved:
          type: boolean
        script:
          type: boolean
        scriptBody:
          type: boolean
        sealed:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        staticClass:
          type: boolean
        superClass:
          $ref: '#/components/schemas/ClassNode'
        synthetic:
          type: boolean
        syntheticPublic:
          type: boolean
        text:
          type: string
        typeAnnotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        unresolvedInterfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        unresolvedName:
          type: string
        unresolvedSuperClass:
          $ref: '#/components/schemas/ClassNode'
        usingGenerics:
          type: boolean
      type: object
    CloudEvent:
      properties:
        attributeNames:
          items:
            type: string
          type: array
          uniqueItems: true
        data:
          $ref: '#/components/schemas/CloudEventData'
        dataContentType:
          type: string
        dataSchema:
          format: uri
          type: string
        extensionNames:
          items:
            type: string
          type: array
          uniqueItems: true
        id:
          type: string
        source:
          format: uri
          type: string
        specVersion:
          enum:
            - '0.3'
            - '1.0'
          type: string
        subject:
          type: string
        time:
          format: date-time
          type: string
        type:
          type: string
      type: object
    CloudEventData:
      type: object
    CompilationCustomizer:
      properties:
        phase:
          enum:
            - INITIALIZATION
            - PARSING
            - CONVERSION
            - SEMANTIC_ANALYSIS
            - CANONICALIZATION
            - INSTRUCTION_SELECTION
            - CLASS_GENERATION
            - OUTPUT
            - FINALIZATION
          type: string
      type: object
    CompileUnit:
      properties:
        classLoader:
          $ref: '#/components/schemas/GroovyClassLoader'
        classes:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        classesToCompile:
          additionalProperties:
            $ref: '#/components/schemas/ClassNode'
          type: object
        codeSource:
          properties:
            certificates:
              items:
                properties:
                  encoded:
                    format: byte
                    type: string
                  publicKey:
                    properties:
                      algorithm:
                        type: string
                      encoded:
                        format: byte
                        type: string
                      format:
                        type: string
                    type: object
                  type:
                    type: string
                type: object
              type: array
            codeSigners:
              items:
                properties:
                  signerCertPath:
                    properties:
                      certificates:
                        items:
                          properties:
                            encoded:
                              format: byte
                              type: string
                            publicKey:
                              properties:
                                algorithm:
                                  type: string
                                encoded:
                                  format: byte
                                  type: string
                                format:
                                  type: string
                              type: object
                            type:
                              type: string
                          type: object
                        type: array
                      encoded:
                        format: byte
                        type: string
                      encodings:
                        type: object
                      type:
                        type: string
                    type: object
                  timestamp:
                    properties:
                      signerCertPath:
                        properties:
                          certificates:
                            items:
                              properties:
                                encoded:
                                  format: byte
                                  type: string
                                publicKey:
                                  properties:
                                    algorithm:
                                      type: string
                                    encoded:
                                      format: byte
                                      type: string
                                    format:
                                      type: string
                                  type: object
                                type:
                                  type: string
                              type: object
                            type: array
                          encoded:
                            format: byte
                            type: string
                          encodings:
                            type: object
                          type:
                            type: string
                        type: object
                      timestamp:
                        format: date-time
                        type: string
                    type: object
                type: object
              type: array
            location:
              format: url
              type: string
          type: object
        config:
          $ref: '#/components/schemas/CompilerConfiguration'
        generatedInnerClasses:
          additionalProperties:
            $ref: '#/components/schemas/InnerClassNode'
          type: object
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        modules:
          items:
            $ref: '#/components/schemas/ModuleNode'
          type: array
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
      type: object
    CompilerConfiguration:
      properties:
        bytecodePostprocessor:
          $ref: '#/components/schemas/BytecodeProcessor'
        bytecodeVersion:
          format: int32
          type: integer
        classpath:
          items:
            type: string
          type: array
        classpathList:
          items:
            type: string
          type: array
          writeOnly: true
        compilationCustomizers:
          items:
            $ref: '#/components/schemas/CompilationCustomizer'
          type: array
        debug:
          type: boolean
        defaultScriptExtension:
          type: string
        disabledGlobalASTTransformations:
          items:
            type: string
          type: array
          uniqueItems: true
        groovydocEnabled:
          type: boolean
        indyEnabled:
          type: boolean
        jointCompilationOptions:
          additionalProperties:
            type: object
          type: object
        logClassgen:
          type: boolean
        logClassgenStackTraceMaxDepth:
          format: int32
          type: integer
        minimumRecompilationInterval:
          format: int32
          type: integer
        optimizationOptions:
          additionalProperties:
            type: boolean
          type: object
        output:
          deprecated: true
          type: object
        parameters:
          type: boolean
        pluginFactory:
          $ref: '#/components/schemas/ParserPluginFactory'
        previewFeatures:
          type: boolean
        recompileGroovySource:
          type: boolean
        runtimeGroovydocEnabled:
          type: boolean
        scriptBaseClass:
          type: string
        scriptExtensions:
          items:
            type: string
          type: array
          uniqueItems: true
        sourceEncoding:
          type: string
        targetBytecode:
          type: string
        targetBytecodeIfValid:
          type: string
          writeOnly: true
        targetDirectory:
          format: binary
          type: string
        targetDirectorySafe:
          type: string
          writeOnly: true
        tolerance:
          format: int32
          type: integer
        verbose:
          type: boolean
        warningLevel:
          format: int32
          type: integer
      type: object
    ConstraintState:
      properties:
        artifactVersion:
          type: string
        attributes:
          additionalProperties:
            type: object
          type: object
        comment:
          type: string
        createdAt:
          type: string
        deliveryConfigName:
          type: string
        environmentName:
          type: string
        judgedAt:
          type: string
        judgedBy:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    ConstraintStatus:
      properties:
        artifactReference:
          type: string
        artifactVersion:
          type: string
        comment:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    ConstructorNode:
      properties:
        abstract:
          type: boolean
        annotationDefault:
          type: boolean
          writeOnly: true
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        code:
          $ref: '#/components/schemas/Statement'
        columnNumber:
          format: int32
          type: integer
        constructor:
          type: boolean
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        default:
          type: boolean
        dynamicReturnType:
          type: boolean
        exceptions:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        final:
          type: boolean
        firstStatement:
          $ref: '#/components/schemas/Statement'
        genericsTypes:
          items:
            $ref: '#/components/schemas/GenericsType'
          type: array
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        packageScope:
          type: boolean
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        private:
          type: boolean
        protected:
          type: boolean
        public:
          type: boolean
        returnType:
          $ref: '#/components/schemas/ClassNode'
        scriptBody:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        static:
          type: boolean
        staticConstructor:
          type: boolean
        synthetic:
          type: boolean
        syntheticPublic:
          type: boolean
        text:
          type: string
        typeDescriptor:
          type: string
        variableScope:
          $ref: '#/components/schemas/VariableScope'
        voidMethod:
          type: boolean
      type: object
    DeckPluginVersion:
      properties:
        id:
          type: string
        version:
          type: string
      type: object
    DefaultPluginDescriptor:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/PluginDependency'
          type: array
        license:
          type: string
        pluginClass:
          type: string
        pluginDescription:
          type: string
        pluginId:
          type: string
        pluginVersion:
          $ref: '#/components/schemas/DefaultPluginDescriptor'
        provider:
          type: string
        requires:
          type: string
        version:
          type: string
      type: object
    DeliveryConfig:
      properties:
        apiVersion:
          type: string
        application:
          type: string
        artifacts:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        environments:
          items:
            $ref: '#/components/schemas/Environment'
          type: array
        name:
          type: string
        serviceAccount:
          type: string
      type: object
    Environment:
      properties:
        constraints:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        locations:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        postDeploy:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        verifyWith:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
      type: object
    EnvironmentArtifactPin:
      properties:
        comment:
          type: string
        pinnedBy:
          type: string
        reference:
          type: string
        targetEnvironment:
          type: string
        version:
          type: string
      type: object
    EnvironmentArtifactVeto:
      properties:
        comment:
          type: string
        reference:
          type: string
        targetEnvironment:
          type: string
        version:
          type: string
      type: object
    ErrorCollector:
      properties:
        configuration:
          $ref: '#/components/schemas/CompilerConfiguration'
        errorCount:
          format: int32
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        lastError:
          $ref: '#/components/schemas/Message'
        warningCount:
          format: int32
          type: integer
        warnings:
          items:
            $ref: '#/components/schemas/WarningMessage'
          type: array
      type: object
    ExpandoMetaClass:
      properties:
        additionalMetaMethods:
          items:
            $ref: '#/components/schemas/MetaMethod'
          type: array
        classInfo:
          $ref: '#/components/schemas/ClassInfo'
        classNode:
          $ref: '#/components/schemas/ClassNode'
        expandoProperties:
          items:
            $ref: '#/components/schemas/MetaProperty'
          type: array
        expandoSubclassMethods:
          items:
            type: object
          type: array
        groovyObject:
          type: boolean
        inRegistry:
          type: boolean
        initialized:
          type: boolean
          writeOnly: true
        metaClass:
          $ref: '#/components/schemas/MetaClass'
        modified:
          type: boolean
        permissivePropertyAccess:
          type: boolean
        properties:
          items:
            $ref: '#/components/schemas/MetaProperty'
          type: array
        registry:
          $ref: '#/components/schemas/MetaClassRegistry'
        theCachedClass:
          $ref: '#/components/schemas/CachedClass'
        upProperties:
          items:
            properties:
              bound:
                type: boolean
              constrained:
                type: boolean
              displayName:
                type: string
              expert:
                type: boolean
              hidden:
                type: boolean
              name:
                type: string
              preferred:
                type: boolean
              readMethod:
                properties:
                  accessible:
                    deprecated: true
                    type: boolean
                  annotatedExceptionTypes:
                    items:
                      properties:
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        type:
                          properties:
                            typeName:
                              type: string
                          type: object
                      type: object
                    type: array
                  annotatedParameterTypes:
                    items:
                      properties:
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        type:
                          properties:
                            typeName:
                              type: string
                          type: object
                      type: object
                    type: array
                  annotatedReceiverType:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      type:
                        properties:
                          typeName:
                            type: string
                        type: object
                    type: object
                  annotatedReturnType:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      type:
                        properties:
                          typeName:
                            type: string
                        type: object
                    type: object
                  annotations:
                    items:
                      type: object
                    type: array
                  bridge:
                    type: boolean
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  default:
                    type: boolean
                  defaultValue:
                    type: object
                  genericExceptionTypes:
                    items:
                      properties:
                        typeName:
                          type: string
                      type: object
                    type: array
                  genericParameterTypes:
                    items:
                      properties:
                        typeName:
                          type: string
                      type: object
                    type: array
                  genericReturnType:
                    properties:
                      typeName:
                        type: string
                    type: object
                  modifiers:
                    format: int32
                    type: integer
                  name:
                    type: string
                  parameterAnnotations:
                    items:
                      items:
                        type: object
                      type: array
                    type: array
                  parameterCount:
                    format: int32
                    type: integer
                  parameters:
                    items:
                      properties:
                        annotatedType:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        declaringExecutable:
                          properties:
                            accessible:
                              deprecated: true
                              type: boolean
                            annotatedExceptionTypes:
                              items:
                                properties:
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  type:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            annotatedParameterTypes:
                              items:
                                properties:
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  type:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            annotatedReceiverType:
                              properties:
                                annotations:
                                  items:
                                    type: object
                                  type: array
                                declaredAnnotations:
                                  items:
                                    type: object
                                  type: array
                                type:
                                  properties:
                                    typeName:
                                      type: string
                                  type: object
                              type: object
                            annotatedReturnType:
                              properties:
                                annotations:
                                  items:
                                    type: object
                                  type: array
                                declaredAnnotations:
                                  items:
                                    type: object
                                  type: array
                                type:
                                  properties:
                                    typeName:
                                      type: string
                                  type: object
                              type: object
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            genericExceptionTypes:
                              items:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            genericParameterTypes:
                              items:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            modifiers:
                              format: int32
                              type: integer
                            name:
                              type: string
                            parameterAnnotations:
                              items:
                                items:
                                  type: object
                                type: array
                              type: array
                            parameterCount:
                              format: int32
                              type: integer
                            synthetic:
                              type: boolean
                            typeParameters:
                              items:
                                properties:
                                  annotatedBounds:
                                    items:
                                      properties:
                                        annotations:
                                          items:
                                            type: object
                                          type: array
                                        declaredAnnotations:
                                          items:
                                            type: object
                                          type: array
                                        type:
                                          properties:
                                            typeName:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  bounds:
                                    items:
                                      properties:
                                        typeName:
                                          type: string
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  genericDeclaration:
                                    type: object
                                  name:
                                    type: string
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            varArgs:
                              type: boolean
                          type: object
                        implicit:
                          type: boolean
                        modifiers:
                          format: int32
                          type: integer
                        name:
                          type: string
                        namePresent:
                          type: boolean
                        parameterizedType:
                          properties:
                            typeName:
                              type: string
                          type: object
                        synthetic:
                          type: boolean
                        varArgs:
                          type: boolean
                      type: object
                    type: array
                  synthetic:
                    type: boolean
                  typeParameters:
                    items:
                      properties:
                        annotatedBounds:
                          items:
                            properties:
                              annotations:
                                items:
                                  type: object
                                type: array
                              declaredAnnotations:
                                items:
                                  type: object
                                type: array
                              type:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                            type: object
                          type: array
                        annotations:
                          items:
                            type: object
                          type: array
                        bounds:
                          items:
                            properties:
                              typeName:
                                type: string
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        name:
                          type: string
                        typeName:
                          type: string
                      type: object
                    type: array
                  varArgs:
                    type: boolean
                type: object
              shortDescription:
                type: string
              writeMethod:
                properties:
                  accessible:
                    deprecated: true
                    type: boolean
                  annotatedExceptionTypes:
                    items:
                      properties:
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        type:
                          properties:
                            typeName:
                              type: string
                          type: object
                      type: object
                    type: array
                  annotatedParameterTypes:
                    items:
                      properties:
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        type:
                          properties:
                            typeName:
                              type: string
                          type: object
                      type: object
                    type: array
                  annotatedReceiverType:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      type:
                        properties:
                          typeName:
                            type: string
                        type: object
                    type: object
                  annotatedReturnType:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      type:
                        properties:
                          typeName:
                            type: string
                        type: object
                    type: object
                  annotations:
                    items:
                      type: object
                    type: array
                  bridge:
                    type: boolean
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  default:
                    type: boolean
                  defaultValue:
                    type: object
                  genericExceptionTypes:
                    items:
                      properties:
                        typeName:
                          type: string
                      type: object
                    type: array
                  genericParameterTypes:
                    items:
                      properties:
                        typeName:
                          type: string
                      type: object
                    type: array
                  genericReturnType:
                    properties:
                      typeName:
                        type: string
                    type: object
                  modifiers:
                    format: int32
                    type: integer
                  name:
                    type: string
                  parameterAnnotations:
                    items:
                      items:
                        type: object
                      type: array
                    type: array
                  parameterCount:
                    format: int32
                    type: integer
                  parameters:
                    items:
                      properties:
                        annotatedType:
                          properties:
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            type:
                              properties:
                                typeName:
                                  type: string
                              type: object
                          type: object
                        annotations:
                          items:
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        declaringExecutable:
                          properties:
                            accessible:
                              deprecated: true
                              type: boolean
                            annotatedExceptionTypes:
                              items:
                                properties:
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  type:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            annotatedParameterTypes:
                              items:
                                properties:
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  type:
                                    properties:
                                      typeName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            annotatedReceiverType:
                              properties:
                                annotations:
                                  items:
                                    type: object
                                  type: array
                                declaredAnnotations:
                                  items:
                                    type: object
                                  type: array
                                type:
                                  properties:
                                    typeName:
                                      type: string
                                  type: object
                              type: object
                            annotatedReturnType:
                              properties:
                                annotations:
                                  items:
                                    type: object
                                  type: array
                                declaredAnnotations:
                                  items:
                                    type: object
                                  type: array
                                type:
                                  properties:
                                    typeName:
                                      type: string
                                  type: object
                              type: object
                            annotations:
                              items:
                                type: object
                              type: array
                            declaredAnnotations:
                              items:
                                type: object
                              type: array
                            genericExceptionTypes:
                              items:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            genericParameterTypes:
                              items:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            modifiers:
                              format: int32
                              type: integer
                            name:
                              type: string
                            parameterAnnotations:
                              items:
                                items:
                                  type: object
                                type: array
                              type: array
                            parameterCount:
                              format: int32
                              type: integer
                            synthetic:
                              type: boolean
                            typeParameters:
                              items:
                                properties:
                                  annotatedBounds:
                                    items:
                                      properties:
                                        annotations:
                                          items:
                                            type: object
                                          type: array
                                        declaredAnnotations:
                                          items:
                                            type: object
                                          type: array
                                        type:
                                          properties:
                                            typeName:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  annotations:
                                    items:
                                      type: object
                                    type: array
                                  bounds:
                                    items:
                                      properties:
                                        typeName:
                                          type: string
                                      type: object
                                    type: array
                                  declaredAnnotations:
                                    items:
                                      type: object
                                    type: array
                                  genericDeclaration:
                                    type: object
                                  name:
                                    type: string
                                  typeName:
                                    type: string
                                type: object
                              type: array
                            varArgs:
                              type: boolean
                          type: object
                        implicit:
                          type: boolean
                        modifiers:
                          format: int32
                          type: integer
                        name:
                          type: string
                        namePresent:
                          type: boolean
                        parameterizedType:
                          properties:
                            typeName:
                              type: string
                          type: object
                        synthetic:
                          type: boolean
                        varArgs:
                          type: boolean
                      type: object
                    type: array
                  synthetic:
                    type: boolean
                  typeParameters:
                    items:
                      properties:
                        annotatedBounds:
                          items:
                            properties:
                              annotations:
                                items:
                                  type: object
                                type: array
                              declaredAnnotations:
                                items:
                                  type: object
                                type: array
                              type:
                                properties:
                                  typeName:
                                    type: string
                                type: object
                            type: object
                          type: array
                        annotations:
                          items:
                            type: object
                          type: array
                        bounds:
                          items:
                            properties:
                              typeName:
                                type: string
                            type: object
                          type: array
                        declaredAnnotations:
                          items:
                            type: object
                          type: array
                        name:
                          type: string
                        typeName:
                          type: string
                      type: object
                    type: array
                  varArgs:
                    type: boolean
                type: object
            type: object
          type: array
          writeOnly: true
        version:
          format: int32
          type: integer
      type: object
    Expression:
      properties:
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        synthetic:
          type: boolean
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
      type: object
    FieldNode:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        closureSharedVariable:
          deprecated: true
          type: boolean
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        dynamicTyped:
          type: boolean
        enum:
          type: boolean
        final:
          type: boolean
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        holder:
          type: boolean
        inStaticContext:
          type: boolean
        initialExpression:
          $ref: '#/components/schemas/Expression'
        initialValueExpression:
          $ref: '#/components/schemas/Expression'
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        originType:
          $ref: '#/components/schemas/ClassNode'
        owner:
          $ref: '#/components/schemas/ClassNode'
        private:
          type: boolean
        protected:
          type: boolean
        public:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        static:
          type: boolean
        synthetic:
          type: boolean
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
        volatile:
          type: boolean
      type: object
    GenericsType:
      properties:
        columnNumber:
          format: int32
          type: integer
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        lowerBound:
          $ref: '#/components/schemas/ClassNode'
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        placeholder:
          type: boolean
        resolved:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
        upperBounds:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        wildcard:
          type: boolean
      type: object
    GrantedAuthority:
      properties:
        authority:
          type: string
      type: object
    GraphQLRequest:
      properties:
        operationName:
          type: string
        query:
          type: string
        variables:
          additionalProperties:
            type: object
          type: object
      type: object
    GroovyClassLoader:
      properties:
        defaultAssertionStatus:
          type: boolean
          writeOnly: true
        definedPackages:
          items:
            properties:
              annotations:
                items:
                  type: object
                type: array
              declaredAnnotations:
                items:
                  type: object
                type: array
              implementationTitle:
                type: string
              implementationVendor:
                type: string
              implementationVersion:
                type: string
              name:
                type: string
              sealed:
                type: boolean
              specificationTitle:
                type: string
              specificationVendor:
                type: string
              specificationVersion:
                type: string
            type: object
          type: array
        name:
          type: string
        parent:
          properties:
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
            definedPackages:
              items:
                properties:
                  annotations:
                    items:
                      type: object
                    type: array
                  declaredAnnotations:
                    items:
                      type: object
                    type: array
                  implementationTitle:
                    type: string
                  implementationVendor:
                    type: string
                  implementationVersion:
                    type: string
                  name:
                    type: string
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVendor:
                    type: string
                  specificationVersion:
                    type: string
                type: object
              type: array
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            unnamedModule:
              properties:
                annotations:
                  items:
                    type: object
                  type: array
                classLoader:
                  properties:
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                    definedPackages:
                      items:
                        properties:
                          annotations:
                            items:
                              type: object
                            type: array
                          declaredAnnotations:
                            items:
                              type: object
                            type: array
                          implementationTitle:
                            type: string
                          implementationVendor:
                            type: string
                          implementationVersion:
                            type: string
                          name:
                            type: string
                          sealed:
                            type: boolean
                          specificationTitle:
                            type: string
                          specificationVendor:
                            type: string
                          specificationVersion:
                            type: string
                        type: object
                      type: array
                    name:
                      type: string
                    registeredAsParallelCapable:
                      type: boolean
                  type: object
                declaredAnnotations:
                  items:
                    type: object
                  type: array
                descriptor:
                  properties:
                    automatic:
                      type: boolean
                    open:
                      type: boolean
                  type: object
                layer:
                  type: object
                name:
                  type: string
                named:
                  type: boolean
                packages:
                  items:
                    type: string
                  type: array
                  uniqueItems: true
              type: object
          type: object
        registeredAsParallelCapable:
          type: boolean
        resourceLoader:
          $ref: '#/components/schemas/GroovyResourceLoader'
        shouldRecompile:
          type: boolean
        unnamedModule:
          properties:
            annotations:
              items:
                type: object
              type: array
            classLoader:
              properties:
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                definedPackages:
                  items:
                    properties:
                      annotations:
                        items:
                          type: object
                        type: array
                      declaredAnnotations:
                        items:
                          type: object
                        type: array
                      implementationTitle:
                        type: string
                      implementationVendor:
                        type: string
                      implementationVersion:
                        type: string
                      name:
                        type: string
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVendor:
                        type: string
                      specificationVersion:
                        type: string
                    type: object
                  type: array
                name:
                  type: string
                registeredAsParallelCapable:
                  type: boolean
              type: object
            declaredAnnotations:
              items:
                type: object
              type: array
            descriptor:
              properties:
                automatic:
                  type: boolean
                open:
                  type: boolean
              type: object
            layer:
              type: object
            name:
              type: string
            named:
              type: boolean
            packages:
              items:
                type: string
              type: array
              uniqueItems: true
          type: object
        urls:
          items:
            format: url
            type: string
          type: array
      type: object
    GroovyResourceLoader:
      type: object
    Groovydoc:
      properties:
        content:
          type: string
        holder:
          $ref: '#/components/schemas/GroovydocHolder'
        present:
          type: boolean
        tagList:
          items:
            $ref: '#/components/schemas/GroovydocTag'
          type: array
      type: object
    GroovydocHolder:
      properties:
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        instance:
          type: object
      type: object
    GroovydocTag:
      properties:
        content:
          type: string
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        name:
          type: string
      type: object
    Headers:
      properties:
        invokeHeaders:
          additionalProperties:
            type: string
          type: object
        readHeaders:
          additionalProperties:
            type: string
          type: object
        writeHeaders:
          additionalProperties:
            type: string
          type: object
      type: object
    Http:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
        headers:
          $ref: '#/components/schemas/Headers'
        queryParams:
          additionalProperties:
            type: string
          type: object
        url:
          type: string
      type: object
    ImportNode:
      properties:
        alias:
          type: string
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        className:
          type: string
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        fieldName:
          type: string
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        packageName:
          type: string
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        star:
          type: boolean
        static:
          type: boolean
        synthetic:
          type: boolean
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
      type: object
    InnerClassNode:
      properties:
        abstract:
          type: boolean
        abstractMethods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        allDeclaredMethods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        allInterfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
          uniqueItems: true
        annotated:
          type: boolean
        annotationDefinition:
          type: boolean
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        anonymous:
          type: boolean
        array:
          type: boolean
        columnNumber:
          format: int32
          type: integer
        compileUnit:
          $ref: '#/components/schemas/CompileUnit'
        componentType:
          $ref: '#/components/schemas/ClassNode'
        declaredConstructors:
          items:
            $ref: '#/components/schemas/ConstructorNode'
          type: array
        declaredMethodsMap:
          additionalProperties:
            $ref: '#/components/schemas/MethodNode'
          type: object
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        derivedFromGroovyObject:
          type: boolean
        enclosingMethod:
          $ref: '#/components/schemas/MethodNode'
        enum:
          type: boolean
        fieldIndex:
          additionalProperties:
            $ref: '#/components/schemas/FieldNode'
          type: object
        fields:
          items:
            $ref: '#/components/schemas/FieldNode'
          type: array
        genericsPlaceHolder:
          type: boolean
        genericsTypes:
          items:
            $ref: '#/components/schemas/GenericsType'
          type: array
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        innerClasses:
          type: object
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        interface:
          type: boolean
        interfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        methods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        modifiers:
          format: int32
          type: integer
        module:
          $ref: '#/components/schemas/ModuleNode'
        name:
          type: string
        nameWithoutPackage:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        objectInitializerStatements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        outerClass:
          $ref: '#/components/schemas/ClassNode'
        outerClasses:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        outerMostClass:
          $ref: '#/components/schemas/ClassNode'
        package:
          $ref: '#/components/schemas/PackageNode'
        packageName:
          type: string
        permittedSubclasses:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        plainNodeReference:
          $ref: '#/components/schemas/ClassNode'
        primaryClassNode:
          type: boolean
        properties:
          items:
            $ref: '#/components/schemas/PropertyNode'
          type: array
        record:
          type: boolean
        recordComponentNodes:
          deprecated: true
          items:
            $ref: '#/components/schemas/RecordComponentNode'
          type: array
        recordComponents:
          items:
            $ref: '#/components/schemas/RecordComponentNode'
          type: array
        redirect:
          $ref: '#/components/schemas/ClassNode'
        redirectNode:
          type: boolean
        resolved:
          type: boolean
        script:
          type: boolean
        scriptBody:
          type: boolean
        sealed:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        staticClass:
          type: boolean
        superClass:
          $ref: '#/components/schemas/ClassNode'
        synthetic:
          type: boolean
        syntheticPublic:
          type: boolean
        text:
          type: string
        typeAnnotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        unresolvedInterfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        unresolvedName:
          type: string
        unresolvedSuperClass:
          $ref: '#/components/schemas/ClassNode'
        usingGenerics:
          type: boolean
        variableScope:
          $ref: '#/components/schemas/VariableScope'
      type: object
    Message:
      type: object
    MetaClass:
      properties:
        classNode:
          $ref: '#/components/schemas/ClassNode'
        metaMethods:
          items:
            $ref: '#/components/schemas/MetaMethod'
          type: array
        methods:
          items:
            $ref: '#/components/schemas/MetaMethod'
          type: array
        properties:
          items:
            $ref: '#/components/schemas/MetaProperty'
          type: array
      type: object
    MetaClassCreationHandle:
      properties:
        disableCustomMetaClassLookup:
          type: boolean
      type: object
    MetaClassRegistry:
      properties:
        metaClassCreationHandle:
          $ref: '#/components/schemas/MetaClassCreationHandle'
        metaClassCreationHandler:
          $ref: '#/components/schemas/MetaClassCreationHandle'
        metaClassRegistryChangeEventListeners:
          items:
            $ref: '#/components/schemas/MetaClassRegistryChangeEventListener'
          type: array
      type: object
    MetaClassRegistryChangeEventListener:
      type: object
    MetaMethod:
      properties:
        abstract:
          type: boolean
        cacheable:
          type: boolean
        declaringClass:
          $ref: '#/components/schemas/CachedClass'
        default:
          type: boolean
        descriptor:
          type: string
        modifiers:
          format: int32
          type: integer
        mopName:
          type: string
        name:
          type: string
        parameterTypes:
          items:
            $ref: '#/components/schemas/CachedClass'
          type: array
        parametersTypes:
          items:
            $ref: '#/components/schemas/CachedClass'
          type: array
          writeOnly: true
        private:
          type: boolean
        protected:
          type: boolean
        public:
          type: boolean
        signature:
          type: string
        static:
          type: boolean
        vargsMethod:
          type: boolean
      type: object
    MetaProperty:
      properties:
        modifiers:
          format: int32
          type: integer
        name:
          type: string
      type: object
    MethodNode:
      properties:
        abstract:
          type: boolean
        annotationDefault:
          type: boolean
          writeOnly: true
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        code:
          $ref: '#/components/schemas/Statement'
        columnNumber:
          format: int32
          type: integer
        constructor:
          type: boolean
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        default:
          type: boolean
        dynamicReturnType:
          type: boolean
        exceptions:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        final:
          type: boolean
        firstStatement:
          $ref: '#/components/schemas/Statement'
        genericsTypes:
          items:
            $ref: '#/components/schemas/GenericsType'
          type: array
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        packageScope:
          type: boolean
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        private:
          type: boolean
        protected:
          type: boolean
        public:
          type: boolean
        returnType:
          $ref: '#/components/schemas/ClassNode'
        scriptBody:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        static:
          type: boolean
        staticConstructor:
          type: boolean
        synthetic:
          type: boolean
        syntheticPublic:
          type: boolean
        text:
          type: string
        typeDescriptor:
          type: string
        variableScope:
          $ref: '#/components/schemas/VariableScope'
        voidMethod:
          type: boolean
      type: object
    MixinNode:
      properties:
        abstract:
          type: boolean
        abstractMethods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        allDeclaredMethods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        allInterfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
          uniqueItems: true
        annotated:
          type: boolean
        annotationDefinition:
          type: boolean
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        array:
          type: boolean
        columnNumber:
          format: int32
          type: integer
        compileUnit:
          $ref: '#/components/schemas/CompileUnit'
        componentType:
          $ref: '#/components/schemas/ClassNode'
        declaredConstructors:
          items:
            $ref: '#/components/schemas/ConstructorNode'
          type: array
        declaredMethodsMap:
          additionalProperties:
            $ref: '#/components/schemas/MethodNode'
          type: object
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        derivedFromGroovyObject:
          type: boolean
        enclosingMethod:
          $ref: '#/components/schemas/MethodNode'
        enum:
          type: boolean
        fieldIndex:
          additionalProperties:
            $ref: '#/components/schemas/FieldNode'
          type: object
        fields:
          items:
            $ref: '#/components/schemas/FieldNode'
          type: array
        genericsPlaceHolder:
          type: boolean
        genericsTypes:
          items:
            $ref: '#/components/schemas/GenericsType'
          type: array
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        innerClasses:
          type: object
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        interface:
          type: boolean
        interfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        methods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        modifiers:
          format: int32
          type: integer
        module:
          $ref: '#/components/schemas/ModuleNode'
        name:
          type: string
        nameWithoutPackage:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        objectInitializerStatements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        outerClass:
          $ref: '#/components/schemas/ClassNode'
        outerClasses:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        package:
          $ref: '#/components/schemas/PackageNode'
        packageName:
          type: string
        permittedSubclasses:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        plainNodeReference:
          $ref: '#/components/schemas/ClassNode'
        primaryClassNode:
          type: boolean
        properties:
          items:
            $ref: '#/components/schemas/PropertyNode'
          type: array
        record:
          type: boolean
        recordComponentNodes:
          deprecated: true
          items:
            $ref: '#/components/schemas/RecordComponentNode'
          type: array
        recordComponents:
          items:
            $ref: '#/components/schemas/RecordComponentNode'
          type: array
        redirect:
          $ref: '#/components/schemas/ClassNode'
        redirectNode:
          type: boolean
        resolved:
          type: boolean
        script:
          type: boolean
        scriptBody:
          type: boolean
        sealed:
          type: boolean
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        staticClass:
          type: boolean
        superClass:
          $ref: '#/components/schemas/ClassNode'
        synthetic:
          type: boolean
        syntheticPublic:
          type: boolean
        text:
          type: string
        typeAnnotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        unresolvedInterfaces:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        unresolvedName:
          type: string
        unresolvedSuperClass:
          $ref: '#/components/schemas/ClassNode'
        usingGenerics:
          type: boolean
      type: object
    ModuleNode:
      properties:
        classes:
          items:
            $ref: '#/components/schemas/ClassNode'
          type: array
        columnNumber:
          format: int32
          type: integer
        context:
          $ref: '#/components/schemas/SourceUnit'
        description:
          type: string
        empty:
          type: boolean
        imports:
          items:
            $ref: '#/components/schemas/ImportNode'
          type: array
        importsResolved:
          type: boolean
          writeOnly: true
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        mainClassName:
          type: string
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        methods:
          items:
            $ref: '#/components/schemas/MethodNode'
          type: array
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        package:
          $ref: '#/components/schemas/PackageNode'
        packageName:
          type: string
        scriptBaseClassFromConfig:
          $ref: '#/components/schemas/ClassNode'
        scriptClassDummy:
          $ref: '#/components/schemas/ClassNode'
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        starImports:
          items:
            $ref: '#/components/schemas/ImportNode'
          type: array
        statementBlock:
          $ref: '#/components/schemas/BlockStatement'
        staticImports:
          additionalProperties:
            $ref: '#/components/schemas/ImportNode'
          type: object
        staticStarImports:
          additionalProperties:
            $ref: '#/components/schemas/ImportNode'
          type: object
        text:
          type: string
        unit:
          $ref: '#/components/schemas/CompileUnit'
      type: object
    Notification:
      properties:
        address:
          type: string
        frequency:
          type: string
        type:
          type: string
      type: object
    OverrideVerificationRequest:
      properties:
        artifactReference:
          type: string
        artifactVersion:
          type: string
        comment:
          type: string
        status:
          type: string
        verificationId:
          type: string
      type: object
    PackageNode:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        synthetic:
          type: boolean
        text:
          type: string
      type: object
    Parameter:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        closureSharedVariable:
          type: boolean
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        defaultValue:
          $ref: '#/components/schemas/Expression'
        dynamicTyped:
          type: boolean
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        inStaticContext:
          type: boolean
        initialExpression:
          $ref: '#/components/schemas/Expression'
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        originType:
          $ref: '#/components/schemas/ClassNode'
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        synthetic:
          type: boolean
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
      type: object
    ParameterTypes:
      properties:
        vargsMethod:
          type: boolean
      type: object
    ParserPluginFactory:
      type: object
    PipelineTemplateDependent:
      properties:
        application:
          type: string
        metaClass:
          $ref: '#/components/schemas/MetaClass'
        pipelineConfigId:
          type: string
        pipelineName:
          type: string
      type: object
    PluginDependency:
      properties:
        optional:
          type: boolean
        pluginId:
          type: string
        pluginVersionSupport:
          type: string
      type: object
    PropertyNode:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        closureSharedVariable:
          deprecated: true
          type: boolean
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        dynamicTyped:
          type: boolean
        field:
          $ref: '#/components/schemas/FieldNode'
        getterBlock:
          $ref: '#/components/schemas/Statement'
        getterName:
          type: string
        getterNameOrDefault:
          type: string
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        inStaticContext:
          type: boolean
        initialExpression:
          $ref: '#/components/schemas/Expression'
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        originType:
          $ref: '#/components/schemas/ClassNode'
        private:
          type: boolean
        public:
          type: boolean
        setterBlock:
          $ref: '#/components/schemas/Statement'
        setterName:
          type: string
        setterNameOrDefault:
          type: string
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        static:
          type: boolean
        synthetic:
          type: boolean
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
      type: object
    ReaderSource:
      properties:
        reader:
          type: object
        uri:
          format: uri
          type: string
      type: object
    RecordComponentNode:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/AnnotationNode'
          type: array
        columnNumber:
          format: int32
          type: integer
        declaringClass:
          $ref: '#/components/schemas/ClassNode'
        groovydoc:
          $ref: '#/components/schemas/Groovydoc'
        hasNoRealSourcePosition:
          type: boolean
          writeOnly: true
        instance:
          $ref: '#/components/schemas/AnnotatedNode'
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        synthetic:
          type: boolean
        text:
          type: string
        type:
          $ref: '#/components/schemas/ClassNode'
      type: object
    Reduction:
      properties:
        anExpression:
          type: boolean
        description:
          type: string
        empty:
          type: boolean
        meaning:
          format: int32
          type: integer
        root:
          $ref: '#/components/schemas/Token'
        rootText:
          type: string
        startColumn:
          format: int32
          type: integer
        startLine:
          format: int32
          type: integer
        type:
          format: int32
          type: integer
      type: object
    RemoteExtensionConfig:
      properties:
        config:
          additionalProperties:
            type: object
          type: object
        id:
          type: string
        transport:
          $ref: '#/components/schemas/RemoteExtensionTransportConfig'
        type:
          type: string
      type: object
    RemoteExtensionTransportConfig:
      properties:
        http:
          $ref: '#/components/schemas/Http'
      type: object
    ReorderPipelinesCommand:
      properties:
        application:
          type: string
        idsToIndices:
          additionalProperties:
            format: int32
            type: integer
          type: object
      type: object
    Resource:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          additionalProperties:
            type: object
          type: object
        spec:
          additionalProperties:
            type: object
          type: object
      type: object
    RetryVerificationRequest:
      properties:
        artifactReference:
          type: string
        artifactVersion:
          type: string
        verificationId:
          type: string
      type: object
    SimpleProxyConfig:
      properties:
        id:
          type: string
        uri:
          type: string
      type: object
    SourceUnit:
      properties:
        ast:
          $ref: '#/components/schemas/ModuleNode'
        classLoader:
          $ref: '#/components/schemas/GroovyClassLoader'
        configuration:
          $ref: '#/components/schemas/CompilerConfiguration'
        cst:
          $ref: '#/components/schemas/Reduction'
        errorCollector:
          $ref: '#/components/schemas/ErrorCollector'
        name:
          type: string
        phase:
          format: int32
          type: integer
        phaseComplete:
          type: boolean
        phaseDescription:
          type: string
        source:
          $ref: '#/components/schemas/ReaderSource'
      type: object
    SpinnakerPluginDescriptor:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/PluginDependency'
          type: array
        license:
          type: string
        pluginClass:
          type: string
        pluginDescription:
          type: string
        pluginId:
          type: string
        pluginVersion:
          $ref: '#/components/schemas/DefaultPluginDescriptor'
        provider:
          type: string
        requires:
          type: string
        unsafe:
          type: boolean
        version:
          type: string
      type: object
    SpinnakerPluginInfo:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        projectUrl:
          type: string
        provider:
          type: string
        releases:
          items:
            $ref: '#/components/schemas/SpinnakerPluginRelease'
          type: array
        repositoryId:
          type: string
      type: object
    SpinnakerPluginRelease:
      properties:
        date:
          format: date-time
          type: string
        preferred:
          type: boolean
        remoteExtensions:
          items:
            $ref: '#/components/schemas/RemoteExtensionConfig'
          type: array
        requires:
          type: string
        sha512sum:
          type: string
        url:
          type: string
        version:
          type: string
      type: object
    Statement:
      properties:
        columnNumber:
          format: int32
          type: integer
        empty:
          type: boolean
        lastColumnNumber:
          format: int32
          type: integer
        lastLineNumber:
          format: int32
          type: integer
        lineNumber:
          format: int32
          type: integer
        metaDataMap:
          additionalProperties:
            type: object
          type: object
        nodeMetaData:
          additionalProperties:
            type: object
          type: object
        sourcePosition:
          $ref: '#/components/schemas/ASTNode'
        statementLabel:
          deprecated: true
          type: string
        statementLabels:
          items:
            type: string
          type: array
        text:
          type: string
      type: object
    StoredView:
      properties:
        reference:
          type: string
      type: object
    StreamingResponseBody:
      type: object
    Token:
      properties:
        anExpression:
          type: boolean
        description:
          type: string
        empty:
          type: boolean
        meaning:
          format: int32
          type: integer
        root:
          $ref: '#/components/schemas/Token'
        rootText:
          type: string
        startColumn:
          format: int32
          type: integer
        startLine:
          format: int32
          type: integer
        text:
          type: string
        type:
          format: int32
          type: integer
      type: object
    User:
      properties:
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        allowedAccounts:
          items:
            type: string
          type: array
        authorities:
          items:
            $ref: '#/components/schemas/GrantedAuthority'
          type: array
        credentialsNonExpired:
          type: boolean
        email:
          type: string
        enabled:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        roles:
          items:
            type: string
          type: array
        username:
          type: string
      type: object
    Variable:
      properties:
        closureSharedVariable:
          type: boolean
        dynamicTyped:
          type: boolean
        inStaticContext:
          type: boolean
        initialExpression:
          $ref: '#/components/schemas/Expression'
        modifiers:
          format: int32
          type: integer
        name:
          type: string
        originType:
          $ref: '#/components/schemas/ClassNode'
        type:
          $ref: '#/components/schemas/ClassNode'
      type: object
    VariableScope:
      properties:
        classScope:
          $ref: '#/components/schemas/ClassNode'
        declaredVariables:
          additionalProperties:
            $ref: '#/components/schemas/Variable'
          type: object
        declaredVariablesIterator:
          type: object
        inStaticContext:
          type: boolean
        parent:
          $ref: '#/components/schemas/VariableScope'
        referencedClassVariables:
          additionalProperties:
            $ref: '#/components/schemas/Variable'
          type: object
        referencedClassVariablesIterator:
          type: object
        referencedLocalVariablesCount:
          format: int32
          type: integer
        referencedLocalVariablesIterator:
          type: object
        root:
          type: boolean
      type: object
    Version:
      properties:
        version:
          type: string
      type: object
    WarningMessage:
      properties:
        context:
          $ref: '#/components/schemas/CSTNode'
        message:
          type: string
      type: object
externalDocs:
  description: Spinnaker Documentation
  url: 'https://spinnaker.io'
info:
  contact:
    name: ''
  description: ''
  title: Spinnaker API
  version: 1.0.0
openapi: 3.0.1
paths:
  /:
    delete:
      operationId: root_5
      responses:
        '200':
          description: OK
      tags:
        - root-controller
    get:
      operationId: root
      responses:
        '200':
          description: OK
      tags:
        - root-controller
    head:
      operationId: root_1
      responses:
        '200':
          description: OK
      tags:
        - root-controller
    options:
      operationId: root_6
      responses:
        '200':
          description: OK
      tags:
        - root-controller
    patch:
      operationId: root_4
      responses:
        '200':
          description: OK
      tags:
        - root-controller
    post:
      operationId: root_2
      responses:
        '200':
          description: OK
      tags:
        - root-controller
    put:
      operationId: root_3
      responses:
        '200':
          description: OK
      tags:
        - root-controller
  /actions/pipelines/reorder:
    post:
      operationId: reorderPipelines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderPipelinesCommand'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Re-order pipelines
      tags:
        - reorder-pipelines-controller
  /actions/strategies/reorder:
    post:
      operationId: reorderPipelineStrategies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderPipelinesCommand'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Re-order pipeline strategies
      tags:
        - reorder-pipelines-controller
  /applications:
    get:
      operationId: getAllApplications
      parameters:
        - description: filters results to only include applications deployed in the specified account
          in: query
          name: account
          required: false
          schema:
            type: string
        - description: filters results to only include applications owned by the specified email
          in: query
          name: owner
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of applications
      tags:
        - application-controller
  '/applications/{applicationName}/jobs/{account}/{region}/{name}':
    get:
      operationId: getJob
      parameters:
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            default: 'false'
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get job
      tags:
        - job-controller
  '/applications/{applicationName}/serverGroups':
    get:
      operationId: getServerGroupsForApplication
      parameters:
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            default: 'false'
            type: string
        - in: query
          name: cloudProvider
          required: false
          schema:
            type: string
        - in: query
          name: clusters
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of server groups for a given application
      tags:
        - server-group-controller
  '/applications/{applicationName}/serverGroups/{account}/{region}/{serverGroupName}':
    get:
      operationId: getServerGroupDetails
      parameters:
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: serverGroupName
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
        - in: query
          name: includeDetails
          required: false
          schema:
            default: 'true'
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a server group's details
      tags:
        - server-group-controller
  '/applications/{application}':
    get:
      operationId: getApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve an application's details
      tags:
        - application-controller
  '/applications/{application}/clusters':
    get:
      operationId: getClusters_1
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a list of cluster names for an application, grouped by account'
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}':
    get:
      operationId: getClusters_2
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of clusters for an account
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}/{clusterName}':
    get:
      operationId: getClusters_3
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a cluster's details
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}/{clusterName}/serverGroups':
    get:
      operationId: getServerGroups_1
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of server groups for a cluster
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}':
    get:
      operationId: getServerGroups_2
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: path
          name: serverGroupName
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a server group's details
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}/scalingActivities':
    get:
      operationId: getScalingActivities
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: path
          name: serverGroupName
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: region
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of scaling activities for a server group
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}/{clusterName}/{cloudProvider}/{scope}/serverGroups/target/{target}':
    get:
      description: '`scope` is either a zone or a region'
      operationId: getTargetServerGroup
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: path
          name: scope
          required: true
          schema:
            type: string
        - in: path
          name: target
          required: true
          schema:
            type: string
        - in: query
          name: onlyEnabled
          required: false
          schema:
            type: boolean
        - in: query
          name: validateOldest
          required: false
          schema:
            type: boolean
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a server group that matches a target coordinate (e.g., newest, ancestor) relative to a cluster'
      tags:
        - cluster-controller
  '/applications/{application}/clusters/{account}/{clusterName}/{type}/loadBalancers':
    get:
      operationId: getClusterLoadBalancers
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a cluster's loadbalancers
      tags:
        - cluster-controller
  '/applications/{application}/executions/search':
    get:
      operationId: searchForPipelineExecutionsByTrigger
      parameters:
        - description: 'Only includes executions that are part of this application. If this value is "*", results will include executions of all applications.'
          in: path
          name: application
          required: true
          schema:
            type: string
        - description: 'Only includes executions that were triggered by a trigger with a type that is equal to a type provided in this field. The list of trigger types should be a comma-delimited string. If this value is missing, results will includes executions of all trigger types.'
          in: query
          name: triggerTypes
          required: false
          schema:
            type: string
        - description: Only includes executions that with this pipeline name.
          in: query
          name: pipelineName
          required: false
          schema:
            type: string
        - description: Only includes executions that were triggered by a trigger with this eventId.
          in: query
          name: eventId
          required: false
          schema:
            type: string
        - description: |-
            Only includes executions that were triggered by a trigger that matches the subset of fields provided by this value. This value should be a base64-encoded string of a JSON representation of a trigger object. The comparison succeeds if the execution trigger contains all the fields of the input trigger, the fields are of the same type, and each value of the field "matches". The term "matches" is specific for each field's type:
            - For Strings: A String value in the execution's trigger matches the input trigger's String value if the former equals the latter (case-insensitive) OR if the former matches the latter as a regular expression.
            - For Maps: A Map value in the execution's trigger matches the input trigger's Map value if the former contains all keys of the latter and their values match.
            - For Collections: A Collection value in the execution's trigger matches the input trigger's Collection value if the former has a unique element that matches each element of the latter.
            - Every other value is compared using the Java "equals" method (Groovy "==" operator)
          in: query
          name: trigger
          required: false
          schema:
            type: string
        - description: 'Only includes executions that were built at or after the given time, represented as a Unix timestamp in ms (UTC). This value must be >= 0 and <= the value of [triggerTimeEndBoundary], if provided. If this value is missing, it is defaulted to 0.'
          in: query
          name: triggerTimeStartBoundary
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: 'Only includes executions that were built at or before the given time, represented as a Unix timestamp in ms (UTC). This value must be <= 9223372036854775807 (Long.MAX_VALUE) and >= the value of [triggerTimeStartBoundary], if provided. If this value is missing, it is defaulted to 9223372036854775807.'
          in: query
          name: triggerTimeEndBoundary
          required: false
          schema:
            default: 9223372036854776000
            format: int64
            type: integer
        - description: 'Only includes executions with a status that is equal to a status provided in this field. The list of statuses should be given as a comma-delimited string. If this value is missing, includes executions of all statuses. Allowed statuses are: NOT_STARTED, RUNNING, PAUSED, SUSPENDED, SUCCEEDED, FAILED_CONTINUE, TERMINAL, CANCELED, REDIRECT, STOPPED, SKIPPED, BUFFERED.'
          in: query
          name: statuses
          required: false
          schema:
            type: string
        - description: 'Sets the first item of the resulting list for pagination. The list is 0-indexed. This value must be >= 0. If this value is missing, it is defaulted to 0.'
          in: query
          name: startIndex
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: 'Sets the size of the resulting list for pagination. This value must be > 0. If this value is missing, it is defaulted to 10.'
          in: query
          name: size
          required: false
          schema:
            default: 10
            format: int32
            type: integer
        - description: 'Reverses the resulting list before it is paginated. If this value is missing, it is defaulted to false.'
          in: query
          name: reverse
          required: false
          schema:
            default: false
            type: boolean
        - description: 'Expands each execution object in the resulting list. If this value is missing, it is defaulted to false.'
          in: query
          name: expand
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Search for pipeline executions using a combination of criteria. The returned list is sorted by buildTime (trigger time) in reverse order so that newer executions are first in the list.
      tags:
        - executions-controller
  '/applications/{application}/functions':
    get:
      operationId: applicationFunctions
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get application functions
      tags:
        - amazon-infrastructure-controller
  '/applications/{application}/history':
    get:
      operationId: getApplicationHistory
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of an application's configuration revision history
      tags:
        - application-controller
  '/applications/{application}/loadBalancers':
    get:
      operationId: getApplicationLoadBalancers
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of load balancers for a given application
      tags:
        - load-balancer-controller
  '/applications/{application}/pipelineConfigs':
    get:
      operationId: getPipelineConfigsForApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: pipelineNameFilter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of an application's pipeline configurations
      tags:
        - application-controller
  '/applications/{application}/pipelineConfigs/{pipelineName}':
    get:
      operationId: getPipelineConfig
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: pipelineName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a pipeline configuration
      tags:
        - application-controller
    post:
      deprecated: true
      operationId: invokePipelineConfig_1
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: pipelineName
          required: true
          schema:
            type: string
        - in: query
          name: user
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: false
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Invoke pipeline config
      tags:
        - application-controller
  '/applications/{application}/pipelines':
    get:
      operationId: getPipelines
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: statuses
          required: false
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of an application's pipeline executions
      tags:
        - application-controller
  '/applications/{application}/pipelines/{id}/cancel':
    put:
      deprecated: true
      operationId: cancelPipeline_1
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: reason
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Cancel pipeline
      tags:
        - application-controller
  '/applications/{application}/rawResources':
    get:
      operationId: getApplicationRawResources
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of raw resources for a given application
      tags:
        - raw-resource-controller
  '/applications/{application}/serverGroupManagers':
    get:
      operationId: getServerGroupManagersForApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of server group managers for an application
      tags:
        - server-group-manager-controller
  '/applications/{application}/serverGroups/{account}/{serverGroupName}/events':
    get:
      operationId: getEvents
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: serverGroupName
          required: true
          schema:
            type: string
        - in: query
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieves a list of events for a server group
      tags:
        - ecs-server-group-events-controller
  '/applications/{application}/snapshots/{account}':
    get:
      operationId: getCurrentSnapshot
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get current snapshot
      tags:
        - snapshot-controller
  '/applications/{application}/snapshots/{account}/history':
    get:
      operationId: getSnapshotHistory
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get snapshot history
      tags:
        - snapshot-controller
  '/applications/{application}/strategyConfigs':
    get:
      operationId: getStrategyConfigsForApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of an application's pipeline strategy configurations
      tags:
        - application-controller
  '/applications/{application}/strategyConfigs/{strategyName}':
    get:
      operationId: getStrategyConfig
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: strategyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a pipeline strategy configuration
      tags:
        - application-controller
  '/applications/{application}/tasks':
    get:
      operationId: getTasks
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: statuses
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of an application's tasks
      tags:
        - application-controller
    post:
      deprecated: true
      operationId: task_1
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Create task
      tags:
        - application-controller
  '/applications/{application}/tasks/{id}':
    get:
      deprecated: true
      operationId: getTask_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get task
      tags:
        - application-controller
  '/applications/{application}/tasks/{id}/cancel':
    put:
      deprecated: true
      operationId: cancelTask_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Cancel task
      tags:
        - application-controller
  '/applications/{application}/tasks/{id}/details/{taskDetailsId}':
    get:
      deprecated: true
      operationId: getTaskDetails_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: taskDetailsId
          required: true
          schema:
            type: string
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get task details
      tags:
        - application-controller
  /artifactory/names:
    get:
      operationId: names_1
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of artifactory names available to triggers
      tags:
        - artifactory-controller
  '/artifacts/account/{accountName}/names':
    get:
      operationId: artifactNames
      parameters:
        - in: path
          name: accountName
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of artifact names that belong to chosen account
      tags:
        - artifact-controller
  '/artifacts/account/{accountName}/versions':
    get:
      operationId: artifactVersions
      parameters:
        - in: path
          name: accountName
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: artifactName
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of artifact versions by account and artifact names
      tags:
        - artifact-controller
  '/artifacts/content-address/{application}/{hash}':
    get:
      operationId: getStoredArtifact
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: hash
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StoredView'
          description: OK
      summary: Retrieve artifact by content hash
      tags:
        - artifact-controller
  /artifacts/credentials:
    get:
      operationId: all_11
      parameters:
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve the list of artifact accounts configured in Clouddriver.
      tags:
        - artifact-controller
  /artifacts/fetch:
    put:
      operationId: fetch
      parameters:
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
      summary: Fetch the contents of an artifact
      tags:
        - artifact-controller
  '/artifacts/{provider}/{packageName}':
    get:
      description: releaseStatus is an optional comma separated list of statuses to filter on.
      operationId: getVersionsOfArtifactForProvider
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: packageName
          required: true
          schema:
            type: string
        - in: query
          name: releaseStatus
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the available artifact versions for an artifact provider and package name
      tags:
        - artifact-controller
  '/artifacts/{provider}/{packageName}/{version}':
    get:
      operationId: getArtifact
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: packageName
          required: true
          schema:
            type: string
        - in: path
          name: version
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve the specified artifact version for an artifact provider and package name
      tags:
        - artifact-controller
  /auth/deleteSessionCache:
    post:
      operationId: deleteSessionCache
      responses:
        '200':
          description: OK
      summary: Delete session cache
      tags:
        - auth-controller
  /auth/loggedOut:
    get:
      operationId: loggedOut
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Get logged out message
      tags:
        - auth-controller
  /auth/rawUser:
    get:
      operationId: rawUser
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get raw user
      tags:
        - auth-controller
  /auth/redirect:
    get:
      operationId: redirect
      parameters:
        - in: query
          name: to
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Redirect to Deck
      tags:
        - auth-controller
  /auth/roles/sync:
    post:
      operationId: sync
      responses:
        '200':
          description: OK
      summary: Sync user roles
      tags:
        - auth-controller
  /auth/user:
    get:
      operationId: user
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get user
      tags:
        - auth-controller
  '/bakery/logs/{region}/{statusId}':
    get:
      operationId: lookupLogs
      parameters:
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: statusId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
        '404':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Not Found
      summary: Retrieve the logs for a given bake
      tags:
        - bake-controller
  /bakery/options:
    get:
      operationId: bakeOptions
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
        '404':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Not Found
      summary: 'Retrieve a list of available bakery base images, grouped by cloud provider'
      tags:
        - bake-controller
  '/bakery/options/{cloudProvider}':
    get:
      operationId: bakeOptions_1
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
        '404':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Not Found
      summary: Retrieve a list of available bakery base images for a given cloud provider
      tags:
        - bake-controller
  /batch/tags:
    post:
      operationId: batchUpdate
      parameters:
        - in: query
          name: application
          required: false
          schema:
            default: adhoc
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                additionalProperties:
                  type: object
                type: object
              type: array
        required: true
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Batch update a set of entity tags.
      tags:
        - batch-entity-tags-controller
  /capabilities/deploymentMonitors:
    get:
      operationId: getDeploymentMonitors
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve the list configured deployment monitors
      tags:
        - capabilities-controller
  /capabilities/expressions:
    get:
      operationId: getExpressionCapabilities
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve the SpEL expression capabilities (e.g. registered functions, etc)'
      tags:
        - capabilities-controller
  /capabilities/quietPeriod:
    get:
      operationId: getQuietPeriodState
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve the current state of the quiet period
      tags:
        - capabilities-controller
  /certificates:
    get:
      operationId: all_10
      parameters:
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of all server certificates
      tags:
        - certificate-controller
  '/certificates/{cloudProvider}':
    get:
      operationId: allByCloudProvider_2
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of server certificates for a given cloud provider
      tags:
        - certificate-controller
  /charts/find:
    get:
      description: The query parameter `q` filters the list of images by image name
      operationId: findImages_1
      parameters:
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: q
          required: false
          schema:
            type: string
        - in: query
          name: region
          required: false
          schema:
            type: string
        - in: query
          name: account
          required: false
          schema:
            type: string
        - in: query
          name: count
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: 'Retrieve a list of helm chart images, filtered by cloud provider, region, and account'
      tags:
        - chart-image-controller
  /charts/tags:
    get:
      operationId: findTags_1
      parameters:
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: repository
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Find tags
      tags:
        - chart-image-controller
  '/charts/{account}/{region}/{imageId}':
    get:
      operationId: getImageDetails_1
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: imageId
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get helm chart image details
      tags:
        - chart-image-controller
  /ci/builds:
    get:
      operationId: getBuilds_1
      parameters:
        - in: query
          name: projectKey
          required: false
          schema:
            type: string
        - in: query
          name: repoSlug
          required: false
          schema:
            type: string
        - in: query
          name: completionStatus
          required: false
          schema:
            type: string
        - in: query
          name: buildNumber
          required: false
          schema:
            type: string
        - in: query
          name: commitId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      tags:
        - ci-controller
  '/ci/builds/{buildId}/output':
    get:
      operationId: getBuildOutputById
      parameters:
        - in: path
          name: buildId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - ci-controller
  /cleanup/resources/deleted:
    get:
      operationId: getAllDeletedResources
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get all deleted resources.
      tags:
        - cleanup-controller
  /cleanup/resources/marked:
    get:
      operationId: getAllMarkedResources
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get all marked resources.
      tags:
        - cleanup-controller
  '/cleanup/resources/{namespace}/{resourceId}':
    get:
      operationId: getMarkedResource
      parameters:
        - in: path
          name: namespace
          required: true
          schema:
            type: string
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get information about a marked resource.
      tags:
        - cleanup-controller
  '/cleanup/resources/{namespace}/{resourceId}/optOut':
    get:
      operationId: optOut
      parameters:
        - in: path
          name: namespace
          required: true
          schema:
            type: string
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Opt out of clean up for a marked resource.
      tags:
        - cleanup-controller
  '/cloudMetrics/{cloudProvider}/{account}/{region}':
    get:
      operationId: findAll
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: filters
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      tags:
        - cloud-metric-controller
  '/cloudMetrics/{cloudProvider}/{account}/{region}/{metricName}/statistics':
    get:
      operationId: getStatistics
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: metricName
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          required: false
          schema:
            format: int64
            type: integer
        - in: query
          name: endTime
          required: false
          schema:
            format: int64
            type: integer
        - in: query
          name: filters
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - cloud-metric-controller
  /concourse/stage/start:
    post:
      operationId: stageExecution
      parameters:
        - in: query
          name: stageId
          required: true
          schema:
            type: string
        - in: query
          name: job
          required: true
          schema:
            type: string
        - in: query
          name: buildNumber
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
      summary: Inform Spinnaker of the Concourse build running connected to a particular Concourse stage execution
      tags:
        - concourse-controller
  '/concourse/{buildMaster}/teams':
    get:
      operationId: teams
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of team names available to triggers
      tags:
        - concourse-controller
  '/concourse/{buildMaster}/teams/{team}/pipelines':
    get:
      operationId: pipelines
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of pipeline names for a given team available to triggers
      tags:
        - concourse-controller
  '/concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/jobs':
    get:
      operationId: jobs
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: path
          name: team
          required: true
          schema:
            type: string
        - in: path
          name: pipeline
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of job names for a given pipeline available to triggers
      tags:
        - concourse-controller
  '/concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/resources':
    get:
      operationId: resources
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: path
          name: team
          required: true
          schema:
            type: string
        - in: path
          name: pipeline
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of resource names for a given pipeline available to the Concourse stage
      tags:
        - concourse-controller
  /credentials:
    get:
      operationId: getAccounts
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: OK
      summary: Retrieve a list of accounts
      tags:
        - credentials-controller
    post:
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDefinition'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDefinition'
          description: OK
      summary: Creates a new account definition.
      tags:
        - credentials-controller
    put:
      operationId: updateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDefinition'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDefinition'
          description: OK
      summary: Updates an existing account definition.
      tags:
        - credentials-controller
  '/credentials/type/{accountType}':
    get:
      operationId: getAccountsByType
      parameters:
        - description: Value of the "@type" key for accounts to search for.
          example: kubernetes
          in: path
          name: accountType
          required: true
          schema:
            type: string
        - description: Maximum number of entries to return in results. Used for pagination.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - description: Account name to start account definition listing from. Used for pagination.
          in: query
          name: startingAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AccountDefinition'
                type: array
          description: OK
      summary: Looks up account definitions by type.
      tags:
        - credentials-controller
  '/credentials/{accountName}':
    delete:
      operationId: deleteAccount
      parameters:
        - description: Name of account definition to delete.
          in: path
          name: accountName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Deletes an account definition by name.
      tags:
        - credentials-controller
  '/credentials/{account}':
    get:
      operationId: getAccount
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDetails'
          description: OK
      summary: Retrieve an account's details
      tags:
        - credentials-controller
  /cron/validate:
    get:
      operationId: validateCronExpression
      parameters:
        - in: query
          name: expression
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - cron-controller
  /ecs/cloudMetrics/alarms:
    get:
      operationId: allMetricAlarms
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of MetricAlarms.
      tags:
        - ecs-cloud-metric-controller
  '/ecs/ecsClusterDescriptions/{account}/{region}':
    get:
      operationId: getEcsClusterDescriptions
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of Ecs Cluster Description WRT account and region
      tags:
        - ecs-cluster-controller
  /ecs/ecsClusters:
    get:
      operationId: all_9
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of ECS clusters that can be used for the account and region.
      tags:
        - ecs-cluster-controller
  /ecs/secrets:
    get:
      operationId: all_8
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of Secrets Manager secrets that can be used for the account and region.
      tags:
        - ecs-secret-controller
  /ecs/serviceDiscoveryRegistries:
    get:
      operationId: all_7
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of Cloud Map services that can be used for the account and region.
      tags:
        - ecs-service-discovery-controller
  /error:
    delete:
      operationId: error_5
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
    get:
      operationId: error
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
    head:
      operationId: error_1
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
    options:
      operationId: error_6
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
    patch:
      operationId: error_4
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
    post:
      operationId: error_2
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
    put:
      operationId: error_3
      parameters:
        - in: query
          name: trace
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - generic-error-controller
  /executions:
    get:
      operationId: getLatestExecutionsByConfigIds
      parameters:
        - description: 'A comma-separated list of pipeline configuration IDs to retrieve recent executions for. Either this OR pipelineConfigIds must be supplied, but not both.'
          in: query
          name: pipelineConfigIds
          required: false
          schema:
            type: string
        - description: 'A comma-separated list of executions to retrieve. Either this OR pipelineConfigIds must be supplied, but not both.'
          in: query
          name: executionIds
          required: false
          schema:
            type: string
        - description: 'The number of executions to return per pipeline configuration. Ignored if executionIds parameter is supplied. If this value is missing, it is defaulted to 1.'
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - description: 'A comma-separated list of execution statuses to filter by. Ignored if executionIds parameter is supplied. If this value is missing, it is defaulted to all statuses.'
          in: query
          name: statuses
          required: false
          schema:
            type: string
        - description: 'Expands each execution object in the resulting list. If this value is missing, it is defaulted to true.'
          in: query
          name: expand
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: 'Retrieves an ad-hoc collection of executions based on a number of user-supplied parameters. Either executionIds or pipelineConfigIds must be supplied in order to return any results. If both are supplied, an exception will be thrown.'
      tags:
        - executions-controller
  '/extensions/{extension}/**':
    delete:
      operationId: any_9
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
    get:
      operationId: any_4
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
    head:
      operationId: any_5
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
    options:
      operationId: any_10
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
    patch:
      operationId: any_8
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
    post:
      operationId: any_6
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
    put:
      operationId: any_7
      parameters:
        - in: path
          name: extension
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - api-extension-controller
  /firewalls:
    get:
      operationId: all_6
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a list of firewalls, grouped by account, cloud provider, and region'
      tags:
        - firewall-controller
  '/firewalls/{account}':
    get:
      operationId: allByAccount_1
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a list of firewalls for a given account, grouped by region'
      tags:
        - firewall-controller
  '/firewalls/{account}/{region}':
    get:
      operationId: allByAccountAndRegion
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of firewalls for a given account and region
      tags:
        - firewall-controller
  '/firewalls/{account}/{region}/{name}':
    get:
      operationId: getSecurityGroup_1
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: vpcId
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a firewall's details
      tags:
        - firewall-controller
  /functions:
    get:
      operationId: functions
      parameters:
        - in: query
          name: functionName
          required: false
          schema:
            type: string
        - in: query
          name: region
          required: false
          schema:
            type: string
        - in: query
          name: account
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get functions
      tags:
        - amazon-infrastructure-controller
  '/history/{name}':
    get:
      operationId: getHistory
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get history for a resource
      tags:
        - history-controller
  /images/find:
    get:
      description: The query parameter `q` filters the list of images by image name
      operationId: findImages
      parameters:
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: q
          required: false
          schema:
            type: string
        - in: query
          name: region
          required: false
          schema:
            type: string
        - in: query
          name: account
          required: false
          schema:
            type: string
        - in: query
          name: count
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: 'Retrieve a list of images, filtered by cloud provider, region, and account'
      tags:
        - image-controller
  /images/tags:
    get:
      operationId: findTags
      parameters:
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: repository
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Find tags
      tags:
        - image-controller
  '/images/{account}/{region}/{imageId}':
    get:
      operationId: getImageDetails
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: imageId
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get image details
      tags:
        - image-controller
  /instanceTypes:
    get:
      operationId: instanceTypes
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get instance types
      tags:
        - amazon-infrastructure-controller
  '/instances/{account}/{region}/{instanceId}':
    get:
      operationId: getInstanceDetails
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: instanceId
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve an instance's details
      tags:
        - instance-controller
  '/instances/{account}/{region}/{instanceId}/console':
    get:
      operationId: getConsoleOutput
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: instanceId
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve an instance's console output
      tags:
        - instance-controller
  /jobs/preconfigured:
    get:
      operationId: preconfiguredWebhooks_1
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of preconfigured jobs in Orca
      tags:
        - job-controller
  /keyPairs:
    get:
      operationId: keyPairs
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get key pairs
      tags:
        - amazon-infrastructure-controller
  /loadBalancers:
    get:
      operationId: getAll
      parameters:
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of load balancers for a given cloud provider
      tags:
        - load-balancer-controller
  '/loadBalancers/{account}/{region}/{name}':
    get:
      operationId: getLoadBalancerDetails
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: 'Retrieve a load balancer''s details as a single element list for a given account, region, cloud provider and load balancer name'
      tags:
        - load-balancer-controller
  '/loadBalancers/{name}':
    get:
      operationId: getLoadBalancer
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a load balancer for a given cloud provider
      tags:
        - load-balancer-controller
  '/managed/application/{application}':
    get:
      operationId: getApplicationDetails
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: includeDetails
          required: false
          schema:
            default: false
            type: boolean
        - in: query
          name: entities
          required: false
          schema:
            default:
              - resources
            items:
              type: string
            type: array
        - in: query
          name: maxArtifactVersions
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get managed details about an application
      tags:
        - managed-controller
  '/managed/application/{application}/config':
    delete:
      operationId: deleteManifestByApp
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeliveryConfig'
          description: OK
      summary: Delete a delivery config manifest for an application
      tags:
        - managed-controller
    get:
      operationId: getConfigBy
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeliveryConfig'
          description: OK
      summary: Get the delivery config associated with an application
      tags:
        - managed-controller
  '/managed/application/{application}/environment/{environment}/constraint':
    post:
      operationId: updateConstraintStatus
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: environment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstraintStatus'
        required: true
      responses:
        '200':
          description: OK
      summary: Update the status of an environment constraint
      tags:
        - managed-controller
  '/managed/application/{application}/environment/{environment}/constraints':
    get:
      operationId: getConstraintState
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: environment
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: '10'
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ConstraintState'
                type: array
          description: OK
      summary: 'List up-to {limit} current constraint states for an environment'
      tags:
        - managed-controller
  '/managed/application/{application}/mark/bad':
    post:
      operationId: markBad
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentArtifactVeto'
        required: true
      responses:
        '200':
          description: OK
      summary: Veto an artifact version in an environment
      tags:
        - managed-controller
  '/managed/application/{application}/mark/good':
    post:
      operationId: markGood
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentArtifactVeto'
        required: true
      responses:
        '200':
          description: OK
      summary: Delete veto of an artifact version in an environment
      tags:
        - managed-controller
  '/managed/application/{application}/pause':
    delete:
      operationId: resumeApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Resume management of an entire application
      tags:
        - managed-controller
    post:
      operationId: pauseApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Pause management of an entire application
      tags:
        - managed-controller
  '/managed/application/{application}/pin':
    post:
      operationId: createPin
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentArtifactPin'
        required: true
      responses:
        '200':
          description: OK
      summary: Create a pin for an artifact in an environment
      tags:
        - managed-controller
  '/managed/application/{application}/pin/{targetEnvironment}':
    delete:
      operationId: deletePin
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: targetEnvironment
          required: true
          schema:
            type: string
        - in: query
          name: reference
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: 'Unpin one or more artifact(s) in an environment. If the `reference` parameter is specified, only the corresponding artifact will be unpinned. If it''s omitted, all pinned artifacts in the environment will be unpinned.'
      tags:
        - managed-controller
  '/managed/application/{application}/veto':
    post:
      operationId: veto
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentArtifactVeto'
        required: true
      responses:
        '200':
          description: OK
      summary: Veto an artifact version in an environment
      tags:
        - managed-controller
  '/managed/application/{application}/veto/{targetEnvironment}/{reference}/{version}':
    delete:
      operationId: deleteVeto
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: targetEnvironment
          required: true
          schema:
            type: string
        - in: path
          name: reference
          required: true
          schema:
            type: string
        - in: path
          name: version
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Remove veto of an artifact version in an environment
      tags:
        - managed-controller
  /managed/delivery-configs:
    post:
      operationId: upsertManifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryConfig'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/DeliveryConfig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryConfig'
          description: OK
      summary: Create or update a delivery config manifest
      tags:
        - managed-controller
  /managed/delivery-configs/diff:
    post:
      operationId: diffManifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryConfig'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/DeliveryConfig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Ad-hoc validate and diff a config manifest
      tags:
        - managed-controller
  /managed/delivery-configs/schema:
    get:
      operationId: schema
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            application/x-yaml:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Ad-hoc validate and diff a config manifest
      tags:
        - managed-controller
  /managed/delivery-configs/validate:
    post:
      operationId: validateManifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryConfig'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/DeliveryConfig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            application/x-yaml:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Validate a delivery config manifest
      tags:
        - managed-controller
  '/managed/delivery-configs/{name}':
    delete:
      operationId: deleteManifest
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeliveryConfig'
          description: OK
      summary: Delete a delivery config manifest
      tags:
        - managed-controller
    get:
      operationId: getManifest_1
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeliveryConfig'
          description: OK
      summary: Get a delivery config manifest
      tags:
        - managed-controller
  '/managed/delivery-configs/{name}.yml':
    get:
      operationId: getManifestYaml
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/DeliveryConfig'
          description: OK
      summary: Get a delivery config manifest
      tags:
        - managed-controller
  '/managed/delivery-configs/{name}/artifacts':
    get:
      operationId: getManifestArtifacts
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get the status of each version of each artifact in each environment
      tags:
        - managed-controller
  '/managed/environments/{application}':
    get:
      operationId: getEnvironments
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get current environment details
      tags:
        - managed-controller
  /managed/graphql:
    post:
      operationId: graphql
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Post a graphql request
      tags:
        - managed-controller
  '/managed/notifications/callbacks/{source}':
    post:
      operationId: processNotificationCallback_1
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: request
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
        - managed-controller
  /managed/reports/adoption:
    get:
      operationId: getAdoptionReport
      parameters:
        - in: query
          name: params
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            text/html:
              schema:
                format: byte
                type: string
          description: OK
      summary: Get a report of Managed Delivery adoption
      tags:
        - managed-controller
  /managed/reports/onboarding:
    get:
      operationId: getOnboardingReport
      parameters:
        - in: header
          name: Accept
          required: false
          schema:
            default: text/html
            type: string
        - in: query
          name: params
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                format: byte
                type: string
          description: OK
      summary: Get a report of application onboarding
      tags:
        - managed-controller
  /managed/resources/diff:
    post:
      operationId: diffResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Resource'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Ad-hoc validate and diff a resource
      tags:
        - managed-controller
  '/managed/resources/export/artifact/{cloudProvider}/{account}/{clusterName}':
    get:
      operationId: exportResource_1
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: clusterName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Generates an artifact definition based on the artifact used in a running cluster
      tags:
        - managed-controller
  '/managed/resources/export/{cloudProvider}/{account}/{type}/{name}':
    get:
      operationId: exportResource
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: serviceAccount
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Resource'
          description: OK
      summary: Generate a keel resource definition for a deployed cloud resource
      tags:
        - managed-controller
  '/managed/resources/{resourceId}':
    get:
      operationId: getResource
      parameters:
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Resource'
          description: OK
      summary: Get a resource
      tags:
        - managed-controller
  '/managed/resources/{resourceId}.yml':
    get:
      operationId: getResourceYaml
      parameters:
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Resource'
          description: OK
      summary: Get a resource
      tags:
        - managed-controller
  '/managed/resources/{resourceId}/pause':
    delete:
      operationId: resumeResource
      parameters:
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Resume management of a resource
      tags:
        - managed-controller
    post:
      operationId: pauseResource
      parameters:
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Pause management of a resource
      tags:
        - managed-controller
  '/managed/resources/{resourceId}/status':
    get:
      operationId: getResourceStatus
      parameters:
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get status of a resource
      tags:
        - managed-controller
  '/managed/{application}/environment/{environment}/verifications':
    post:
      operationId: overrideVerification
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: environment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OverrideVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
      summary: Override the status of a verification
      tags:
        - managed-controller
  '/managed/{application}/environment/{environment}/verifications/retry':
    post:
      operationId: retryVerification
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: environment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
      summary: Retry a verification
      tags:
        - managed-controller
  '/manifests/{account}/{location}/{name}':
    get:
      operationId: getManifest
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: location
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - manifest-controller
  /networks:
    get:
      operationId: all_5
      parameters:
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a list of networks, grouped by cloud provider'
      tags:
        - network-controller
  '/networks/{cloudProvider}':
    get:
      operationId: allByCloudProvider_1
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of networks for a given cloud provider
      tags:
        - network-controller
  /nexus/names:
    get:
      operationId: names
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of nexus names available to triggers
      tags:
        - nexus-controller
  '/notifications/callbacks/{source}':
    post:
      operationId: processNotificationCallback
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: request
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
        - notification-controller
  /notifications/metadata:
    get:
      operationId: getNotificationTypeMetadata
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      tags:
        - notification-controller
  '/notifications/{type}/{application}':
    delete:
      operationId: deletePipeline_2
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - notification-controller
    get:
      operationId: getNotificationConfig
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: path
          name: application
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - notification-controller
    post:
      operationId: saveNotificationConfig
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: path
          name: application
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      tags:
        - notification-controller
  /pipelineConfigs:
    get:
      operationId: getAllPipelineConfigs
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get all pipeline configs.
      tags:
        - pipeline-config-controller
  '/pipelineConfigs/{pipelineConfigId}/convertToTemplate':
    get:
      operationId: convertPipelineConfigToPipelineTemplate
      parameters:
        - in: path
          name: pipelineConfigId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Convert a pipeline config to a pipeline template.
      tags:
        - pipeline-config-controller
  '/pipelineConfigs/{pipelineConfigId}/history':
    get:
      operationId: getPipelineConfigHistory_1
      parameters:
        - in: path
          name: pipelineConfigId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get pipeline config history.
      tags:
        - pipeline-config-controller
  /pipelineTemplates:
    get:
      operationId: list_3
      parameters:
        - in: query
          name: scopes
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: List pipeline templates.
      tags:
        - pipeline-templates-controller
    post:
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Create a pipeline template.
      tags:
        - pipeline-templates-controller
  /pipelineTemplates/resolve:
    get:
      operationId: resolveTemplates
      parameters:
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: executionId
          required: false
          schema:
            type: string
        - in: query
          name: pipelineConfigId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Resolve a pipeline template.
      tags:
        - pipeline-templates-controller
  '/pipelineTemplates/{id}':
    delete:
      operationId: delete_2
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: application
          required: false
          schema:
            type: string
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Delete a pipeline template.
      tags:
        - pipeline-templates-controller
    get:
      operationId: get_3
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get a pipeline template.
      tags:
        - pipeline-templates-controller
    post:
      operationId: update_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: skipPlanDependents
          required: false
          schema:
            default: false
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Update a pipeline template.
      tags:
        - pipeline-templates-controller
  '/pipelineTemplates/{id}/dependents':
    get:
      operationId: listPipelineTemplateDependents_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: recursive
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PipelineTemplateDependent'
                type: array
          description: OK
      summary: List all pipelines that implement a pipeline template
      tags:
        - pipeline-templates-controller
  /pipelines:
    post:
      operationId: savePipeline
      parameters:
        - in: query
          name: staleCheck
          required: false
          schema:
            default: false
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      summary: Save a pipeline definition
      tags:
        - pipeline-controller
  /pipelines/bulksave:
    post:
      operationId: bulksavePipeline
      parameters:
        - description: Application in which to run the bulk save task
          example: bulk_save_placeholder_app
          in: query
          name: application
          required: false
          schema:
            default: bulk_save_placeholder_app
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                additionalProperties:
                  type: object
                type: object
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Save a list of pipelines
      tags:
        - pipeline-controller
  /pipelines/move:
    post:
      operationId: renamePipeline
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      summary: Rename a pipeline definition
      tags:
        - pipeline-controller
  /pipelines/start:
    post:
      operationId: start
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Initiate a pipeline execution
      tags:
        - pipeline-controller
  '/pipelines/v2/{application}/{pipelineNameOrId}':
    post:
      operationId: invokePipelineConfigViaEcho
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: pipelineNameOrId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: false
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Trigger a pipeline execution
      tags:
        - pipeline-controller
  '/pipelines/{application}/{pipelineNameOrId}':
    post:
      operationId: invokePipelineConfig
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: pipelineNameOrId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: false
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Trigger a pipeline execution
      tags:
        - pipeline-controller
  '/pipelines/{application}/{pipelineName}':
    delete:
      operationId: deletePipeline_1
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: pipelineName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Delete a pipeline definition
      tags:
        - pipeline-controller
  '/pipelines/{id}':
    delete:
      operationId: deletePipeline
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Delete a pipeline execution
      tags:
        - pipeline-controller
    get:
      operationId: getPipeline
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a pipeline execution
      tags:
        - pipeline-controller
    put:
      operationId: updatePipeline
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Update a pipeline definition
      tags:
        - pipeline-controller
  '/pipelines/{id}/cancel':
    put:
      operationId: cancelPipeline
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: reason
          required: false
          schema:
            type: string
        - in: query
          name: force
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: OK
      summary: Cancel a pipeline execution
      tags:
        - pipeline-controller
  '/pipelines/{id}/evaluateExpression':
    get:
      operationId: evaluateExpressionForExecution
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: expression
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Evaluate a pipeline expression using the provided execution as context
      tags:
        - pipeline-controller
    post:
      operationId: evaluateExpressionForExecutionViaPOST_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Evaluate a pipeline expression using the provided execution as context
      tags:
        - pipeline-controller
  '/pipelines/{id}/evaluateVariables':
    post:
      operationId: evaluateVariables
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - description: Execution id to run against
          in: query
          name: executionId
          required: true
          schema:
            type: string
        - description: Comma separated list of requisite stage IDs for the evaluation stage
          in: query
          name: requisiteStageRefIds
          required: false
          schema:
            default: ''
            type: string
        - description: Version of SpEL evaluation logic to use (v3 or v4)
          in: query
          name: spelVersion
          required: false
          schema:
            default: ''
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: List of variables/expressions to evaluate
              items:
                additionalProperties:
                  type: string
                type: object
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Evaluate variables same as Evaluate Variables stage using the provided execution as context
      tags:
        - pipeline-controller
  '/pipelines/{id}/pause':
    put:
      operationId: pausePipeline
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Pause a pipeline execution
      tags:
        - pipeline-controller
  '/pipelines/{id}/resume':
    put:
      operationId: resumePipeline
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Resume a pipeline execution
      tags:
        - pipeline-controller
  '/pipelines/{id}/stages/{stageId}':
    patch:
      operationId: updateStage
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: stageId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Update a stage execution
      tags:
        - pipeline-controller
  '/pipelines/{id}/stages/{stageId}/restart':
    put:
      operationId: restartStage
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: stageId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Restart a stage execution
      tags:
        - pipeline-controller
  '/pipelines/{id}/{stageId}/evaluateExpression':
    get:
      operationId: evaluateExpressionForExecutionAtStage
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: stageId
          required: true
          schema:
            type: string
        - in: query
          name: expression
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Evaluate a pipeline expression at a specific stage using the provided execution as context
      tags:
        - pipeline-controller
  /plugins/deck/plugin-manifest.json:
    get:
      operationId: getPluginManifest
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DeckPluginVersion'
                type: array
          description: OK
      summary: Retrieve a plugin manifest
      tags:
        - deck-plugins-controller
  '/plugins/deck/{pluginId}/{pluginVersion}/{asset}':
    get:
      operationId: getPluginAsset
      parameters:
        - in: path
          name: pluginId
          required: true
          schema:
            type: string
        - in: path
          name: pluginVersion
          required: true
          schema:
            type: string
        - in: path
          name: asset
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Retrieve a single plugin asset by version
      tags:
        - deck-plugins-controller
  /plugins/info:
    get:
      operationId: getAllPluginInfo
      parameters:
        - in: query
          name: service
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get all plugin info objects
      tags:
        - plugin-info-controller
    post:
      operationId: persistPluginInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpinnakerPluginInfo'
        required: true
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Persist plugin metadata information
      tags:
        - plugin-info-controller
    put:
      operationId: persistPluginInfo_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpinnakerPluginInfo'
        required: true
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Persist plugin metadata information
      tags:
        - plugin-info-controller
  '/plugins/info/{id}':
    delete:
      operationId: deletePluginInfo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Delete plugin info with the provided Id
      tags:
        - plugin-info-controller
  /plugins/installed:
    get:
      operationId: getInstalledPlugins
      parameters:
        - in: query
          name: service
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/SpinnakerPluginDescriptor'
                  type: array
                type: object
          description: OK
      summary: Get all installed Spinnaker plugins
      tags:
        - plugins-installed-controller
  '/plugins/publish/{pluginId}/{pluginVersion}':
    post:
      operationId: publishPlugin
      parameters:
        - in: path
          name: pluginId
          required: true
          schema:
            type: string
        - in: path
          name: pluginVersion
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                plugin:
                  format: binary
                  type: string
                pluginInfo:
                  $ref: '#/components/schemas/SpinnakerPluginInfo'
              required:
                - plugin
                - pluginInfo
              type: object
      responses:
        '200':
          description: OK
      summary: Publish a plugin binary and the plugin info metadata.
      tags:
        - plugin-publish-controller
  /projects:
    get:
      operationId: all_4
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get all projects
      tags:
        - project-controller
  '/projects/{id}':
    get:
      operationId: get_2
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get a project
      tags:
        - project-controller
  '/projects/{id}/clusters':
    get:
      operationId: getClusters
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get a project's clusters
      tags:
        - project-controller
  '/projects/{id}/pipelines':
    get:
      operationId: allPipelinesForProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - in: query
          name: statuses
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get all pipelines for project
      tags:
        - project-controller
  /proxies:
    get:
      operationId: list_2
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SimpleProxyConfig'
                type: array
          description: OK
      tags:
        - proxy-controller
  '/proxies/{proxy}/**':
    delete:
      operationId: any_3
      parameters:
        - in: path
          name: proxy
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - proxy-controller
    get:
      operationId: any
      parameters:
        - in: path
          name: proxy
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - proxy-controller
    post:
      operationId: any_1
      parameters:
        - in: path
          name: proxy
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - proxy-controller
    put:
      operationId: any_2
      parameters:
        - in: path
          name: proxy
          required: true
          schema:
            type: string
        - in: query
          name: requestParams
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
        - proxy-controller
  /pubsub/subscriptions:
    get:
      operationId: all_3
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
          description: OK
      summary: Retrieve the list of pub/sub subscriptions configured in Echo.
      tags:
        - pubsub-subscription-controller
  /responseHeader/api:
    get:
      operationId: api_1
      responses:
        '200':
          description: OK
      tags:
        - test-controller
  '/roles/{cloudProvider}':
    get:
      operationId: all_2
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of roles that can be used by the selected cloud provider
      tags:
        - role-controller
  /search:
    get:
      operationId: search
      parameters:
        - in: query
          name: q
          required: false
          schema:
            default: ''
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: platform
          required: false
          schema:
            type: string
        - in: query
          name: pageSize
          required: false
          schema:
            default: 10000
            format: int32
            type: integer
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - in: query
          name: allowShortQuery
          required: false
          schema:
            default: false
            type: boolean
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Search infrastructure
      tags:
        - search-controller
  /securityGroups:
    get:
      deprecated: true
      operationId: all_1
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a list of security groups, grouped by account, cloud provider, and region'
      tags:
        - security-group-controller
  '/securityGroups/{account}':
    get:
      deprecated: true
      operationId: allByAccount
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: 'Retrieve a list of security groups for a given account, grouped by region'
      tags:
        - security-group-controller
  '/securityGroups/{account}/{region}/{name}':
    get:
      deprecated: true
      operationId: getSecurityGroup
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            default: aws
            type: string
        - in: query
          name: vpcId
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a security group's details
      tags:
        - security-group-controller
  /serverGroups:
    get:
      operationId: getServerGroups
      parameters:
        - in: query
          name: applications
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: cloudProvider
          required: false
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: 'Retrieve a list of server groups for a list of applications or a list of servergroups by ''account:region:name'''
      tags:
        - server-group-controller
  '/servicebroker/{account}/serviceInstance':
    get:
      operationId: getServiceInstance
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: query
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: serviceInstanceName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - service-broker-controller
  '/servicebroker/{account}/services':
    get:
      operationId: listServices
      parameters:
        - in: query
          name: cloudProvider
          required: false
          schema:
            type: string
        - in: query
          name: region
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      tags:
        - service-broker-controller
  /storage:
    get:
      deprecated: true
      operationId: all
      parameters:
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve the list of storage accounts configured in Clouddriver.
      tags:
        - storage-account-controller
  /strategies:
    post:
      operationId: saveStrategy
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      tags:
        - strategy-controller
  /strategies/move:
    post:
      operationId: renameStrategy
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      tags:
        - strategy-controller
  '/strategies/{application}/{strategyName}':
    delete:
      operationId: deleteStrategy
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: path
          name: strategyName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - strategy-controller
  '/strategies/{id}':
    put:
      operationId: updateStrategy
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - strategy-controller
  /strategyConfigs:
    get:
      operationId: getAllStrategyConfigs
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      tags:
        - strategy-config-controller
  '/strategyConfigs/{strategyConfigId}/history':
    get:
      operationId: getPipelineConfigHistory
      parameters:
        - in: path
          name: strategyConfigId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      tags:
        - strategy-config-controller
  /subnets:
    get:
      operationId: subnets
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get subnets
      tags:
        - amazon-infrastructure-controller
  '/subnets/{cloudProvider}':
    get:
      operationId: allByCloudProvider
      parameters:
        - in: path
          name: cloudProvider
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of subnets for a given cloud provider
      tags:
        - subnet-controller
  /tags:
    get:
      operationId: list_1
      parameters:
        - description: |-
            Any parameters to filter by, passed as individual parameters. Options are: 
              cloudProvider, application, entityType, entityId, idPrefix, account, region, namespace, maxResults
          in: query
          name: allParameters
          required: true
          schema:
            additionalProperties:
              type: object
            type: object
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      tags:
        - entity-tags-controller
    post:
      operationId: post
      parameters:
        - in: query
          name: entityId
          required: true
          schema:
            type: string
        - in: query
          name: entityType
          required: true
          schema:
            type: string
        - in: query
          name: account
          required: true
          schema:
            type: string
        - in: query
          name: region
          required: true
          schema:
            type: string
        - in: query
          name: cloudProvider
          required: true
          schema:
            type: string
        - in: query
          name: application
          required: false
          schema:
            type: string
        - in: query
          name: isPartial
          required: false
          schema:
            default: true
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                additionalProperties:
                  type: object
                type: object
              type: array
        required: true
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      tags:
        - entity-tags-controller
  /tags/**:
    get:
      operationId: get_1
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      tags:
        - entity-tags-controller
  '/tags/{id}/{tag}':
    delete:
      description: 'multiple tags can be deleted for an entity using a comma as a separator, e.g. /tag1,tag2'
      operationId: delete_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: tag
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '202':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Accepted
      summary: Deletes a subset of tags for the provided tag ID
      tags:
        - entity-tags-controller
  /tasks:
    post:
      operationId: task
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Create task
      tags:
        - task-controller
  /tasks/cancel:
    put:
      operationId: cancelTasks
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Cancel tasks
      tags:
        - task-controller
  '/tasks/{id}':
    delete:
      operationId: deleteTask
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Delete task
      tags:
        - task-controller
    get:
      operationId: getTask
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get task
      tags:
        - task-controller
  '/tasks/{id}/cancel':
    put:
      operationId: cancelTask
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Cancel task
      tags:
        - task-controller
  '/tasks/{id}/details/{taskDetailsId}':
    get:
      operationId: getTaskDetails
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: taskDetailsId
          required: true
          schema:
            type: string
        - in: header
          name: X-RateLimit-App
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get task details
      tags:
        - task-controller
  /test-provided-id-request-filter/api:
    get:
      operationId: api
      responses:
        '200':
          description: OK
      tags:
        - test-controller
  /test/asyncApi:
    get:
      operationId: asyncApi
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
      tags:
        - test-controller
  '/v1/data/adhoc/{groupId}/{bucketId}/**':
    delete:
      operationId: getAdhocData_5
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
    get:
      operationId: getAdhocData
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
    head:
      operationId: getAdhocData_1
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
    options:
      operationId: getAdhocData_6
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
    patch:
      operationId: getAdhocData_4
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
    post:
      operationId: getAdhocData_2
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
    put:
      operationId: getAdhocData_3
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: bucketId
          required: true
          schema:
            type: string
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
  '/v1/data/static/{id}':
    get:
      operationId: getStaticData
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: filters
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
        - in: query
          name: expectedContentType
          required: false
          schema:
            default: application/json
            type: string
      responses:
        '200':
          description: OK
      tags:
        - data-controller
  /v2/builds:
    get:
      description: 'Deprecated, use the v3 endpoint instead'
      operationId: getBuildMasters
      parameters:
        - in: query
          name: type
          required: false
          schema:
            default: ''
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get build masters
      tags:
        - build-controller
  '/v2/builds/{buildMaster}/build/{number}/**':
    get:
      description: 'Deprecated, use the v3 endpoint instead'
      operationId: getBuild
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get build for build master
      tags:
        - build-controller
  '/v2/builds/{buildMaster}/builds/**':
    get:
      description: 'Deprecated, use the v3 endpoint instead'
      operationId: getBuilds
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get builds for build master
      tags:
        - build-controller
  '/v2/builds/{buildMaster}/jobs':
    get:
      description: 'Deprecated, use the v3 endpoint instead'
      operationId: getJobsForBuildMaster
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get jobs for build master
      tags:
        - build-controller
  '/v2/builds/{buildMaster}/jobs/**':
    get:
      description: 'Deprecated, use the v3 endpoint instead'
      operationId: getJobConfig
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get job config
      tags:
        - build-controller
  /v2/canaries/canary:
    post:
      operationId: initiateCanaryWithConfig
      parameters:
        - in: query
          name: application
          required: false
          schema:
            type: string
        - in: query
          name: parentPipelineExecutionId
          required: false
          schema:
            type: string
        - in: query
          name: metricsAccountName
          required: false
          schema:
            type: string
        - in: query
          name: storageAccountName
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Start a canary execution with the supplied canary config
      tags:
        - v-2-canary-controller
  '/v2/canaries/canary/{canaryConfigId}':
    post:
      operationId: initiateCanary
      parameters:
        - in: path
          name: canaryConfigId
          required: true
          schema:
            type: string
        - in: query
          name: application
          required: false
          schema:
            type: string
        - in: query
          name: parentPipelineExecutionId
          required: false
          schema:
            type: string
        - in: query
          name: metricsAccountName
          required: false
          schema:
            type: string
        - in: query
          name: storageAccountName
          required: false
          schema:
            type: string
        - in: query
          name: configurationAccountName
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Start a canary execution
      tags:
        - v-2-canary-controller
  '/v2/canaries/canary/{canaryConfigId}/{canaryExecutionId}':
    get:
      deprecated: true
      operationId: getCanaryResult_1
      parameters:
        - in: path
          name: canaryConfigId
          required: true
          schema:
            type: string
        - in: path
          name: canaryExecutionId
          required: true
          schema:
            type: string
        - in: query
          name: storageAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: (DEPRECATED) Retrieve a canary result
      tags:
        - v-2-canary-controller
  '/v2/canaries/canary/{canaryExecutionId}':
    get:
      operationId: getCanaryResult
      parameters:
        - in: path
          name: canaryExecutionId
          required: true
          schema:
            type: string
        - in: query
          name: storageAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a canary result
      tags:
        - v-2-canary-controller
  /v2/canaries/credentials:
    get:
      operationId: listCredentials
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of configured Kayenta accounts
      tags:
        - v-2-canary-controller
  /v2/canaries/judges:
    get:
      operationId: listJudges
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of all configured canary judges
      tags:
        - v-2-canary-controller
  /v2/canaries/metadata/metricsService:
    get:
      operationId: listMetricsServiceMetadata
      parameters:
        - in: query
          name: filter
          required: false
          schema:
            type: string
        - in: query
          name: metricsAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of descriptors for use in populating the canary config ui
      tags:
        - v-2-canary-controller
  '/v2/canaries/metricSetPairList/{metricSetPairListId}':
    get:
      operationId: getMetricSetPairList
      parameters:
        - in: path
          name: metricSetPairListId
          required: true
          schema:
            type: string
        - in: query
          name: storageAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a metric set pair list
      tags:
        - v-2-canary-controller
  '/v2/canaries/{application}/executions':
    get:
      operationId: getCanaryResultsByApplication
      parameters:
        - in: path
          name: application
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - description: 'Comma-separated list of statuses, e.g.: RUNNING, SUCCEEDED, TERMINAL'
          in: query
          name: statuses
          required: false
          schema:
            type: string
        - in: query
          name: storageAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of an application's canary results
      tags:
        - v-2-canary-controller
  /v2/canaryConfig:
    get:
      operationId: getCanaryConfigs
      parameters:
        - in: query
          name: application
          required: false
          schema:
            type: string
        - in: query
          name: configurationAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of canary configurations
      tags:
        - v-2-canary-config-controller
    post:
      operationId: createCanaryConfig
      parameters:
        - in: query
          name: configurationAccountName
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Create a canary configuration
      tags:
        - v-2-canary-config-controller
  '/v2/canaryConfig/{id}':
    delete:
      operationId: deleteCanaryConfig
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: configurationAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
      summary: Delete a canary configuration
      tags:
        - v-2-canary-config-controller
    get:
      operationId: getCanaryConfig
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: configurationAccountName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Retrieve a canary configuration by id
      tags:
        - v-2-canary-config-controller
    put:
      operationId: updateCanaryConfig
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: configurationAccountName
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Update a canary configuration
      tags:
        - v-2-canary-config-controller
  /v2/pipelineTemplates:
    get:
      operationId: list
      parameters:
        - in: query
          name: scopes
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: (ALPHA) List pipeline templates.
      tags:
        - v-2-pipeline-templates-controller
  /v2/pipelineTemplates/create:
    post:
      operationId: create
      parameters:
        - in: query
          name: tag
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: (ALPHA) Create a pipeline template.
      tags:
        - v-2-pipeline-templates-controller
  /v2/pipelineTemplates/plan:
    post:
      operationId: plan
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: (ALPHA) Plan a pipeline template configuration.
      tags:
        - v-2-pipeline-templates-controller
  '/v2/pipelineTemplates/update/{id}':
    post:
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: tag
          required: false
          schema:
            type: string
        - in: query
          name: skipPlanDependents
          required: false
          schema:
            default: false
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: (ALPHA) Update a pipeline template.
      tags:
        - v-2-pipeline-templates-controller
  /v2/pipelineTemplates/versions:
    get:
      operationId: listVersions
      parameters:
        - in: query
          name: scopes
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  items:
                    additionalProperties:
                      type: object
                    type: object
                  type: array
                type: object
          description: OK
      summary: List pipeline templates with versions
      tags:
        - v-2-pipeline-templates-controller
  '/v2/pipelineTemplates/{id}':
    delete:
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: tag
          required: false
          schema:
            type: string
        - in: query
          name: digest
          required: false
          schema:
            type: string
        - in: query
          name: application
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Delete a pipeline template.
      tags:
        - v-2-pipeline-templates-controller
    get:
      operationId: get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: tag
          required: false
          schema:
            type: string
        - in: query
          name: digest
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: (ALPHA) Get a pipeline template.
      tags:
        - v-2-pipeline-templates-controller
  '/v2/pipelineTemplates/{id}/dependents':
    get:
      operationId: listPipelineTemplateDependents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PipelineTemplateDependent'
                type: array
          description: OK
      summary: (ALPHA) List all pipelines that implement a pipeline template
      tags:
        - v-2-pipeline-templates-controller
  /v3/builds:
    get:
      operationId: v3GetBuildMasters
      parameters:
        - in: query
          name: type
          required: false
          schema:
            default: ''
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get build masters
      tags:
        - build-controller
  '/v3/builds/{buildMaster}/build/{number}':
    get:
      operationId: v3GetBuild
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
        - in: query
          name: job
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get build for build master
      tags:
        - build-controller
  '/v3/builds/{buildMaster}/builds':
    get:
      operationId: v3GetBuilds
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: query
          name: job
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Get builds for build master
      tags:
        - build-controller
  '/v3/builds/{buildMaster}/job':
    get:
      operationId: v3GetJobConfig
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
        - in: query
          name: job
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get job config
      tags:
        - build-controller
  '/v3/builds/{buildMaster}/jobs':
    get:
      operationId: v3GetJobsForBuildMaster
      parameters:
        - in: path
          name: buildMaster
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get jobs for build master
      tags:
        - build-controller
  /version:
    get:
      operationId: getVersion
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Version'
          description: OK
      summary: Fetch Gate's current version
      tags:
        - version-controller
  /vpcs:
    get:
      deprecated: true
      operationId: vpcs
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: OK
      summary: Get VPCs
      tags:
        - amazon-infrastructure-controller
  '/webhooks/cdevents/{source}':
    post:
      operationId: webhooks_1
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudEvent'
        required: true
      responses:
        '200':
          description: OK
      summary: Endpoint for posting webhooks to Spinnaker's CDEvents webhook service
      tags:
        - webhook-controller
  /webhooks/preconfigured:
    get:
      operationId: preconfiguredWebhooks
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: object
                type: array
          description: OK
      summary: Retrieve a list of preconfigured webhooks in Orca
      tags:
        - webhook-controller
  '/webhooks/{type}/{source}':
    post:
      operationId: webhooks
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: path
          name: source
          required: true
          schema:
            type: string
        - in: header
          name: X-Hub-Signature
          required: false
          schema:
            type: string
        - in: header
          name: X-Event-Key
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Endpoint for posting webhooks to Spinnaker's webhook service
      tags:
        - webhook-controller
servers:
  - description: Generated server url
    url: 'http://localhost'
